#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 15166 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e 9a) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 16 #"2htdp/planetcute"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"KEY-UP"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"KEY-DOWN"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"KEY-LEFT"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"KEY-RIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"KEY-SMASH"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"KEY-PLACE"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"KEY-ROTATE"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"m\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"GOLD-SPAWN-RATE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"UP-ARROW"
0 0 24 3 1 #" "
0 2          15 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\37\0\0\0\37\b"
 #"\6\0\0\0\37\256\269\0\0\3sIDATH\211\355\225\317J#K\24"
 #"\306\277\372\323\3516\3462\f\f\342."
 #"\210\16\202\2167\230\205\"\210\212\272\361"
 #"\r|7\237\300\267p%\223@\220D\fY\250\vE\27\202 ^\306$]]"
 #"\375\335E\337*\253\325\361n\356\237\201\231\202CWu5\347w\276sNU\303"
 #"\2301\363<#i\231\347\231\237\27V"
 #"\fk\237\347\306\30\346y\316\301`\300"
 #"\355\355m\366z=\277\37~W^\333\222\177g\b7\262,e\226\245~\323Z"
 #"\3134M\275#c\fI\262\335nsgg\207\0\330l6\331j\2658\34\16"
 #"_A\363</\301_\6\0\367\302ZCk\315+\325n\244i\3124M\331\353"
 #"\365\270\273\273K\0\324Z\263Z\255ryy\231\335n\227\326ZfYF\222\34"
 #"\215F/<\274\1\177\v\234\347\271\217"
 #"\332\251H\323\224\217\217\217\\ZZ\"\0NN\376F@\22\220\224Rsaa"
 #"\201\227\227\227%\334\337\5\200\227u\266"
 #"\326\320\30\303,\313\230\3479\263\254H"
 #"\377\371\3719\347\347\347\t\200\200\244\20"
 #"\212RjJ\251\tHj]\341\364\3644\317\316\3168\32\2158\36\217_e/"
 #"L?i\vx\bvP7\362<g\273\335\346\372\372:\225R\4$'&&"
 #"\275j\255+\376\231$U6\233M\36\35\35\371l\275\27@\0/R\34\202\215"
 #"1\354\367\373\334\332\332b\24E\324\272B!\224W\236$U*\0251\216'\b"
 #"H*\25\21\220\\[[c\253\325*\371z+\b\204\37\204\360\341p\310\273\273"
 #";...z\347\256\276Q\24\373\2653\aV\252\b\362\313\227\337yuu\365"
 #"\16\234\204\203\206pc\f{\275\36\e\215\206"
 #"w\346\234;\325\200d\245\222x\240\224\332\277w"
) 440
(
 #"e\371\374y\236\247\247\247|zz*\335\1N \302s\354\216\312\311\311\t7"
 #"66|=CuQ\24\227\2\211\242\3307\235R\221\17\326\365A\243\261\314N"
 #"\247Ckm\251\373\255\r\322\356:\374"
 #"\342\342\202\233\233\233\24BQ\bE\255"
 #"+\336\34\4\220\245R\204\3019\365q<A)5?|\370\310\245\245\6\273\335"
 #"nI\365p8,\322n\214\341x<\346\375\375=ggg\t\200Rj\257\320"
 #"\2454\204\27u\327\214\364DI\261k"
 #"\3120;\225J\302z\275\316\353\353\353"
 #"\267\323\356j\34\307\261O\257K\235s"
 #"$\204\372K\261&\240\251U\342\347\205"
 #"=7\245S\3572&\204\342\334\334\34"
 #"[\255\226\277\246A\222\307\307\307\334\333"
 #"\333\363\27\210\263$\251z\350s\207kJQ)\301\265J\250UB)*o\36"
 #"\275\320\307\352\352*\333\3556\307\3431"
 #"1\30\f\374O\302E\0326\221s\24E1\5\"\2\232I\\\373\256\372b-"
 #"K\315\352\346\356t\254\254\254\260\323\351"
 #"P\34\34\34\360\346\346\6J)\30c!\245\4\0\220\204\224\22\267\267\2678<"
 #"<\304\303\303\3\224\214`s\v%U\351) \20E\21\2141 \210Z\255\212"
 #"\375\375}\324\353udY\6\2555\2141\260\326\242V\253\341\333\267?033"
 #"\3\204\207>\374\241\270\321\357\367955\3553\341\352\27Z\270\aH~\3724"
 #"\305\257_\333\357^0$Y\310\374\237"
 #"\306\317\t'\371\223*\377O\340$\277"
 #"\373\356\307Q.\204\200\20\342\37\207"
 #"\274T\357\30?\216\362_\360_\360\177{\374\t\177\203"
 #"1PL\203@\232\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"DOWN-ARROW"
0 0 24 3 1 #" "
0 2          17 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\37\0\0\0\37\b"
 #"\6\0\0\0\37\256\269\0\0\0044IDATH\211\355W[o\23G\30"
 #"=s\331\213\355V\2A\223\276\221V!\215\32TR+\312\205V\n?\223w"
 #"\376\5\330DH\244@\22P\204\20\22\240\276$\221\222\267(Jl\255ww\346"
 #"\364\301\314\227\35\307i\325\247>\224\221"
 #">\355zn\347|\347;c\217\341\275"
 #"\347\337\305\207\17\3783\363=\265\266"
 #"\0044\265\266T\312D\321\34\0034o"
 #"\337\236\341\253W;\374\247\246\361\37\266"
 #"\257\340_\301\377G\340$\341\275\aI\0\0I8\347\0\0J)8\347\340\275"
 #"\207\367\36I\222\200$\224R0\306\310"
 #"\2320\346\275\207\265V\346O\2660?\274[\255\343\344\225R\320Z\313Dk-"
 #"\332\3556\222$AUU\321&I\222\0\0\252\252\2221\357}D.\220\r\21"
 #"\326+\245`\235s\321@ \0\0\3169TU\205\301`\200\252\252\242M\235s"
 #"\320Z\243\256kYc\214\201\367^\224"
 #"\363\336\303\30sm\366\332\30\3\255u"
 #"\4\336\334,\317s\4u\232%\t\237\2151\260\326\"\224/\200\a\5\247\1\a"
 #",;\255.\315IEQ\200$\222$A]\3272f\214\211\274\21\372\224R\350"
 #"t:\222P\323O\223\204ls`Z]B\346UU\301Z+\6\2146\371b"
 #"\262P\367\262,q~~>\226V_\177\240\264R\n$QUU\344\370\360>"
 #"\30\f\320n\267\1\214=\20j\356\275"
 #"G\232\246\322\37\334\255\265\306\215\e7"
 #"\"\337\204\354\275\367\250\353\32\316\271\261"
 #"\333\37=z\204\263\2633\f\207Ch\255E\316\220\335\351\351)NNN\20H"
 #"\nk\255Q\226\245H\e\2321\6\207\207\207x\374\3701\236=\353"
 #"\211\324\315yi\232\242\323\351\0\357\337\277g\267\333e\226e\362{l"
) 500
(
 #"m*\357\341wz\374\3712\24\22*$\4,\363\354\e\32\235]\216)Cc"
 #"\22jmiL\"\373\0\232y\336\346"
 #"\322\322\22\367\366\366\210\341p\310\335\335"
 #"]\256\256\256\22\320T\312\310\244\2608"
 #"\\\30\214\316ht&\240\n\t\23\333\22PkrZ\223\313\205#\0&I&"
 #"{//w\271\265\265\305\341pH\220dY\226|\373\366-\27\26\26\230\246\271"
 #",l\265:W\24\b\340\n\t\265J\251U*\331\217I]\316M\323\234i\232"
 #"\v\201\371\371\5\366\373}VUE~"
 #"9\267\254\353\232UU\361\370\370\230\263"
 #"\263\263\2646\225M\232\31H_\38"
 #"\274\217e\327\2\326\fc\22\336\272\365"
 #"\35?~\374H\222\227\340\341>U\3275\235s|\367\356\35\327\326\326\230e-"
 #"\271\243Y\233\322\332T\2104=`t"
 #"\26\21\314\262\226<\203w\272\335\25\356"
 #"\355\355\311\335\255,\313\261\354EQ\320"
 #"9G\222\362\354\365z|\360\340\367H\362\346\2051\230)RC\31\251m0-"
 #"\240\271\274\334\345\323\247}\222dQ\24"
 #"\274\270\270\20\22\222yQ\24\254\353\232"
 #"\336{\222\344\366\3666\357\335\373\205y"
 #"\336\216@B\326\301\204M\22A\235\320"
 #"\267\270\3703_\277\336\345`0`]"
 #"\327\2:\34\16\307\340\315N\222\2\356"
 #"\275\347\301\301\1\357\334\371\201\235\316\267"
 #"\222]\363\350X\233F*\4e\0\315"
 #"\273w\177\342\347\317\177\212\232\243\321("
 #"R7\312\374\272\266\263\263\303\215\215\337"
 #"\242#\327\224\267\t\30\244\276\177\377W"
 #"\276x\361\307\225\377\0\223\r\244\3438\256o[[[\\__\217\344o\265:"
 #"\221\233\303\263\333]\341\223'OD\346"
 #"\353\301]\23|:\211\321hD\357=\367\367\3679??\37}a4\353\333j"
 #"ux\363\346-\276|\371R@\313\262\234\222\375%\326\24"
 #"\360\351*x\357ytt\304\271\27191a\363\370\315\315"
) 133
(
 #"\375\310O\237>]Y\23G\375\357\300\235s\22\336{\276y\363\206\e\e\eR"
 #"\337$\311\270\262\262\312\355\355mY3\30\f\304X\223\340!HGLvL\22"
 #"hn\22d\354\367\373\334\334\334$\0...\262\327\353\3219'G(\20\210"
 #"\301\353+\201\311\216i\4F\243QD"
 #"\202$\237?\177\316\207\17\37r\177\177_@\3\301\242(\204\370u\300\336"
 #"\327\374\v\35g\t!)m\3\36\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"RIGHT-ARROW"
0 0 24 3 1 #" "
0 2          17 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\37\0\0\0\37\b"
 #"\6\0\0\0\37\256\269\0\0\4\333IDATH\211\255W\317k\24I\24"
 #"\376\352UuWO\306\225\260\240{wb6\a\225!\4\223A\362\177x\21\17"
 #"\262\a\377\4o{\b\"\236\204\305\233"
 #"\",\236\204%\377\300\340\305K\34\202"
 #"\256\254\220\260\331xP\4\311\n\272\n\246{\272\253\276=L\252\246'?ff"
 #"a\37\24]\323T\277\357\375\370\336\253"
 #"7\340\24RU\25\275\367\364\336\223$"
 #"\235s$\311\207\17\37\362\365\353\327\361"
 #"wY\226#\337\205\367\244#\351\350}5\262\4S\210\210@)\5\245\24\0\200"
 #"$\234s\370\374\3713\256_\277\216\315\315M\24E\1c\f\0\3009\a\0\361"
 #"\374\211z\247\1'\31\27\0h\255A\22y\236ckk\v7o\336\304\316\316"
 #"\16\274\367\250\252\n\"\202<\317k\340"
 #"\307\303L\4'\31\225\4\217\0\300\30\3\21\301\267o9^\275\372\3W\257^"
 #"\305\333\267oa\214\201R\nY\226\241"
 #"(\212\261P\23\301C\270\353!\257?\265\326p\316a{\373Ot:\35lm"
 #"m\241(\n\24E\1k\355X\335\23\301\275\367q\257\265\206R\n$\341\275\a"
 #"Ih\255\2431\237>\375\203k\327\256"
 #"\341\371\363\347\260\326\36\362\374(\334T"
 #"9\257\e\0\f\243!\"\250\252\n\326"
 #"\332\230\357\27/~\307\255[\267\320\353"
 #"\365\220\246\351\t\376\312t\340\"\2\221"
 #"\321c\201|J)x\357#\323\275\367\20\21\364z\233\270q\343'\274\177\377~"
 #"\234f\230\355\355\355\261\340$a\255\305"
 #"\376\376>\264\326(\313\22\215F\3_"
 #"\277~\305\307\217\37\221$\t\312\262D"
 #"UU0\306\3009\a\222x\363\346\r\256\\Y\305\372\372oX\\\\"
 #"\204s.F+\317sdY\6u\346\314\17\234\344\275R\neY\242\331"
) 500
(
 #"l\242\252*8\347\320h4\260\267\267\207~\277\17\357}LEH\221R\n\326"
 #"Z\264\333m\334\275{\a\253\253\25312\300A\345(\2459iY\333  \4"
 #"\204J\351\370L\22\e\367Z'\361\274"
 #"\210\211\347\233\315\357x\341\302%\366z"
 #"=\222dQ\24\354\367\373\344 o\343\201\1a\232f4&% \0241#\306"
 #"\0\206\"&\2*\245iL\32\317\3\302,\233a\253\325\342\273w\357F\332/"
 #"\206J\216_\301\0\255\223\350]\0J\323\214Z,E\245TH\342\331\372\267!"
 #":Z'\234\237\237\347\306\306F\274#&z\236\246Y\3648(\252/Q)\1"
 #"C\205d`H-\344u#\1\2411)WVV\370\354\3313:\347\250\225\222"
 #"\237\307\221-\260\24@$\2141\6Z\353A\243\t\244\304A'\204@\251\321^"
 #" \"p\316\301{\217\275\275\277\261\273\373\27Z\255\26\324 T\343K-MS"
 #"\364\373\375\310\342\320Z\2151\360\356\240"
 #"\3561T#2\332\v\16\353\3<:\235\316tl\17!\253\207R\304P\353\204"
 #"\200afOQ\213%`\6)8\340E _\375\233$\261\274x\361\"77"
 #"7'\347<\200\32\223\216\220/\354\23"
 #"\323\210\240Fg4:\213\300!\367\201\254\200pi\3512\273\335.\213\242 B"
 #"\231\234\264\352u\35<\260\266\21\225\5"
 #"\302e\366\24\25\222\21@k\eL\323,:q\376\374\217\354v\273\254\252j\272"
 #"RK\323,\206+\200\a`\255\23*$\24\225\36\0301dv}%\211\345\354"
 #"\354\367\334\335\335\215eFr\262\347\365"
 #"Z?\274\214I\217\224W\0\17\321\21"
 #"1l\267\27\371\362\345\3138\323\355\357"
 #"\357\263(\n\232\331\331\331\261}\3359"
 #"\akm\234\333\254\265p\316\301\30\203\17\37>DV\213\b\264\326"
 #"\261*\302\0350\350\355w\321n\267\221\3479\274\367\230\231\231\31T"
) 300
(
 #"\316\306Fol\251\325K\245,K\210H|\256\257\257\343\336\275{\3612\t\267"
 #"Z\270`\26\26\26\360\350\321#\264\333"
 #"\227 \"\361~\257\252j0\204\204\221"
 #"\370\244\25F\347\343dmmm\204\371"
 #"\365\322\234\237_\340\316\316\356\211c5"
 #"\311\351F\3470*\5\17C\n\302\260\30\232N\330/--\341\301\203\a\230\233"
 #";\27\257\3200V\327e*\360 u\220\2404\214\312A\26\27\27q\347\316m"
 #"t:\313\23\264y\0345gJ\t\\\20\21x\357\221e\31\32\215\6\356\337\377"
 #"\5\313\313\313q\0I\222\344\bh\220"
 #"\211\340\307\365\347\360\336{\37Sq\366\354Y<}\332E\253\325\32*?\22j"
 #"?\362\375\177\n{=\274\365\313ee"
 #"e\5\217\37\377\32\201\277|\371\2\340"
 #"\177\370\273t\230P\300\220xi\232bn\356\34n\337^C\247\323A\236\347\0"
 #"\200\323\247O\307\375P<\16\313T9\257\17~\301\30\2555\232\315&\236<y"
 #"\202V\253\25\377>\225e\t\0\310\262\254f\364h+\t\357\377"
 #"\5F\345\a\317\341,\271\32\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"LEFT-ARROW"
0 0 24 3 1 #" "
0 2          17 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\37\0\0\0\37\b"
 #"\6\0\0\0\37\256\269\0\0\0044IDATH\211\265WMK\\I\24"
 #"=u\253\336\207\266\31\\\212H\26\1"
 #"\21\205!\211D\263\350\225\340_\20\\"
 #"\n\22&\e\27\202\233\20f\223\345\220"
 #"\374\202,\2\222\37\220\177\20\202\20C\243\222nl\260GTpc \253\304$"
 #"\335\357\253\316,:Uv\217\235\326\261"
 #"\231\v\227w\353\361^\235{\317\255\272u\vY\226\320\332\234dAkso\267"
 #"\307\226$Y\24\5I2\317s\346yN\222l4\32|\371\362%{\211\265\366"
 #"Z*\306\30(\245@\262\257\2\200\210"
 #"@k\215\367\357\337\343\361\343\3078::\302 \"\316 \t\245\24D\4J)"
 #"(\245\275\255\265\6\0\244i\212j\265"
 #"\212g\317\236\341\355\333\267\b\202\240\347"
 #"\244J\251k\201\e\0\260\326\376\4t"
 #"?y\237`\255\205\210\240(\n\234\237\237cee\5\365z\35q<\214/_"
 #"\316o\24\261\23!\351#\4\332\f\24E\1km\373\3\21Xkqxx\210"
 #"r\271\214j\265\212,+\320j\2650:::\30x'E\355\374\266i\26i"
 #"Go\255\305\356\356.VWWq||\f\21\3\21\201\210\340\307\217\37\277\234"
 #"\370:\324\213\213\20\20\220\312\203\2@"
 #"\226e\250\327\353\330\330\330\300\336\336\36"
 #"\254m;c\255\2051m'\334b\274\211\230v~/\0\335\302k\265Z\370\372"
 #"\365+VVV\260\267\367\21Zk\237\2120\f\221\246\351\225\321\271]\364Kp"
 #"\21A\232\246\b\303\20\0\220\3479\224"
 #"R899\301\322\322\22\16\16\376\356"
 #"\232,\b\2\244i\212\341\341a|\376"
 #"\374\31\215F\243\257\3\375\300\325\317"
 #"\242\0\0\236\362\335\335]\254\257\257\343\303\207J\27"
 #"\315Y\226\371\357\254\265\270u\353\26\3428\356\v\336W"
) 500
(
 #"\3224\365\225)\317s\36\34\34\260\\.\23\20\212\30\212\30ok\35P\3040"
 #"\fc*\245\t\b\225\322}\325\315\321"
 #"K\341\200\3234\345\247O\237x\347\316\35j\255\31EC\36\b\20\2\322ek"
 #"\03500CW\202\367SdYF\222\254\325j\274\177\377>\343\370\2\300E\26"
 #"\4Q\327;\300P! `\376\365\376\262\366\5'\311\255\255-.,,\20\0"
 #"\225\322>BGy'\315F\307\f\314"
 #"\20\215\216\251%\32,\362j\265\312\305\305E*\24582\362\233\367\27037."
 #"w\27\321\266u`\332\313\3452\265\326"
 #"\4\340s\351\300\334\330=\265D\36T"
 #"T\330\246\177\20\360\375\375}\336\273w"
 #"\217###\36\30\20\32\23z\26\234mtL\300PT\350\355\201\300\233\315&"
 #"+\225\nggg\273\0\207\206J\227\26\216\213\334\251\250p0p\222L\222\204"
 #"\225J\205\323\323\3234&\364\v.\212\206\274\23~_#\350r\242\337>\276J"
 #"Q\24\5]\2419;;\343\330\330X\317-\323UX\20\370U\177\325V\353\253"
 #"\235\275W\236\347\254\325j\234\235\235e"
 #"\34\17{\260N`\21\323\221\236\301\"WI\222Pk\355[%k-\266\266\266"
 #"\360\364\351\237\330\336\336\366\255\225\253\353"
 #"\356\3334M1::\332u\4\377WQ\374y\354|\373\366\r\245R\tEQ"
 #"\300\30\203\355\355m<z\364\a\352\365"
 #"\372%P7^^^\306\332\332\332\315\17\226<\317}\213l\255eQ\\\264\314"
 #"\247\247\247\234\234\234\362\a\212+\263\216"
 #"\366'O\236^\273M\356\331:w\366"
 #"o\0\272\332\350\211\211\t\274~\275\211"
 #"\a\17\36 \216cdY\346\317t\240\273\361\274\211\n`\321\326\3362??\217"
 #"\347\317\377\302\324\324$\2141\320Z\243\331l\242T*]\273E\376"
 #"\225t\254\26\v\245\350\243w\222e"
 #"\31\346\346\346\260\271\271\211\211\211q"
) 133
(
 #"\277\300\276\177\377>\20\260\a\357nu.Xp\24GQ\204\231\231\31\274{\367"
 #"\16\343\343c\210\242\b\227\377\273!\370"
 #"U\322l6\1\0\267o\337\306\2337"
 #"op\367\356\357\376\352\364?\200\333."
 #"\352\243(\202\210 I\22\314\314\314\340"
 #"\305\213\27x\370p\16i\332\32\b\34"
 #"\227o\246\235c\372\322\233$\211\277\261"
 #"fY\306\235\235\35\276z\365\252\347-\365\272\362\17n\262"
 #":\240\207=\271\343\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"SYMBOL-DIR-LIST"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; Constants for cropping and scaling the images"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Constants for all the images "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ROCK-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          17 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\4\234IDATx\234\355\235\333\232\253 \f"
 #"\205\3\36\252}\342y\363\266*d.\366f\276\31EA@\r\230\377\262\265U"
 #"Y\310\n\1A|}}!0\244\220W_\0\263\204E!\b\213B\220\332\366"
 #"!b\270\315\b!\202\177[\22\276eh+\257\205(\210\b\357\367\e\264\326A"
 #"\27\323u\35TU\25\364\333R\320Z"
 #"\303\353\365r\36'\245\204\256\353\26\302"
 #"X\237\24\2555(\245\270\326\a\202\210"
 #"\316J\275\365$\255z\n\v\22\207\253\374\266\276g\243OL\212\312lm\276r"
 #"%\306\\S\235\27\21\243\2%\200\202D\31\307\21\206ap\36\3274\r\264m"
 #"\233\354\274J)\370|>\v!b\204)F\24\237\340\4\21\17\211\f\225RI"
 #"\377\257\30O\21BD\231+%\212\20"
 #"\305\267\260c\333\372\263\330l\276(\327,\3376|~\17G\334S\352J\261\20"
 #"E\b\1}\337\a\327*)\217\177\370"
 #"\206a\200q\34\377\24\206\255\263\3264"
 #"\r4M\363\347\263\324\242H)\241\357{\347qZkk@`\303\372\244\234Q"
 #"\2601 \242W\306A\b\1u]\37\332l\t!\234\301\203\20bW0@\273"
 #"\3647\310\311G\366^C\266\242\224\f\213B\220b:\2176\246iZ\264\345u"
 #"]'\355\321\373b\2(\333\347s\212\26e\36\221!\342eA\214O@`\270"
 #"U\363E\271\337\365\233[\211B!\22"
 #"\363\341V\242\370\344\307(\20\345)\237"
 #"\317'x,\277m\333\340\214m\3234"
 #"\301\277\365\365\24\245\224s(\300d\235"
 #"\37\217G\320\265\254\21,\n\"\376D"
 #"7!\265o\236\376\330\203\224\362p\3036\367\347:\346\b\242\356,"
 #"\227\346\340(\216\272\367[yJ.\260(\4)\272\363\30CUU^"
) 500
(
 #")\371#\2320\26e\5\223\366\277\2n\276\b\302\242\20$Z\224\\R\279"
 #"\21\334h\n!\240m\333\340N \365"
 #"!\347+\211r\262\253\214\260t\270\272\22\204E!\b\213B\220bLa\232&"
 #"gV\27\340\237\17\206z\241\326\32\306qtF\234R\312\250y\0\305\210b\306"
 #"?\\\263\356\1\302\3\24\2555\f\303\0\210\270z\0363\306\3224Mp\n\246"
 #"\230\346\353\314Y\367[\377\223b8\243\30QJ\242\bQ(\r\264\245\310p\220"
 #"\367\24\333\204:\e\251\337\246\262!\245"
 #"\364\32\217\217m\302\262\20\305e\340g\21\eUy\237\347\3603$\200\202 g"
 #"\222\205(w\343V\242\3442\314\20\345)\3438\202\326z\263#e\206US\246"
 #"\352\353\272\16\232\214w\324+\333\251\211"
 #"\232\2147\216#L\323\344l\363SO\2363\263\22s\251\371{\211.\251\253L"
 #"\270TA\0n\346)\271\20$\312\331"
 #"\323U\347\v\322\224\216\267\247\330R\326"
 #"g\24P]\327\213\n\220\203Y\307\340"
 #"%\n\"\3020\f\227\254\226\0273\376"
 #"\221+\273\232\257\273\365\254\257\202\215\236"
 #" \273D\331\353!w0\345#\360n\254C_i\23B\360\304\273\235x\211b"
 #"fC2\347\300U\230 ,\nAX\24\202x\e\3754M\213h\312\326\333."
 #"\31\237\327\270\1\342\337\2\363\356\321\317"
 #"\02720QU\351)\217\337(\245\340\375~o\36\203\210?\343=\267\237\214G"
 #"\205\24-\a\213B\20g\363u'\317\330\342\314\341\n\253(s3\243\226.\321"
 #"Z{-\324\0233\fmVt\375\315\31\23\376\0Vv\32\212Y\235\350\f|"
 #"7\eh\3336x\205!\245\224\327nAG\300\236B\20\26\205 A=\34j"
 #"\36C\211S7\265\261u\206J\216\314bz\345R\312\343g\335\v"
 #"!\340\361x\334\252\367\356\273\212\321\21x{J\311O\0055\330\350"
) 237
(
 #"\t\262*\2121\253\24\306\305\354\303\352)sS\347\246\353\\\254;\ru]w"
 #"\305\2650\377aO!\b\213B\220lEq\5\379\a'\253[\237\373\334T"
 #"l\3175\24\263\27\211k\35\226+_"
 #"h\362\311\262\257MT\264\246\356_\257"
 #"\327\346\273\214\206\276\357/\351\345\373."
 #"\223x\225(Zkg\332\337l\260\363|>\27\327\271\231f\331zZ\256\16\223"
 #"\257>\277\17\301{e&\276\16&\1,JbR<\301\367zE*\22\337\224"
 #"S\354P:\213\262\3\237\311x\206\230"
 #"\220\234E\331\311\31\375\37\366\24\2028"
 #"S\367\241\3373\333l\225_\324\326\347"
 #"9\364\25R\222\372U\301\265\377\212J"
 #"\335\337M\224\252\252\340\371|&\375O"
 #"\357\275\203\357V\330{8\243l\330\350\t\302\242\20\204E!\310"
 #"7\35\\\320\"\322\b\346\37\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"GRASS-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          21 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           5 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\b\373IDATx\234\355\235M\217\344H\21"
 #"\206\237HgUu\367\314\364\316\316\354"
 #"\316\202\20\202\303\216X\16\334@Bh"
 #"\304\211?\307\215?\303\37@H\b\255\4\278,H\34\20 \244]1\333\323"
 #"3\323\323eg\6\a\227\253\375\221eg\271\\\325\256j\277RwW\273\362\313"
 #"\21\231\361FF\246\323\362\363\337\276T"
 #"\272 0\273L\220D:\223\206\220];\374R\241#\273}\224`\316\4:Z"
 #"\344\336{\334\215\277+O!\2710$"
 #"\27\246=\257\200\377\340\311\336\371\366\n"
 #"\24\314B\260\217\223\366t\e\352\320T"
 #"I\257]\245-\222\b\263\313\244\"\3uJv\355\320Zs\314\366\265N\3307"
 #"&\245\214\20#SJ\267%\335\271\6=H5\321\b\265\307J@-u\e\267"
 #"]-\253\212\272  u\216i\\\210"
 #"\204\344\365\342\253u\213\320\3401\21\300"
 #"\264W\245\232\347\213\221C\250\216h\b"
 #"\210\21\24\255\264\307\332'I%\21\36"
 #"\262\267\36\365\375\272S\366\336\241\251V"
 #"\356Z}\223\344\223s\203\231\233\212\24"
 #"\305t\223\374&\270[\217OK\231U"
 #"1g\206\344\254\324\353\24\314\3340\263\35R\24ASOv\355\332\323\251\"3"
 #"\301>\352\341\20\220\337\257}\322tN"
 #"l\305\243\222\322O\37(\250\313\177\220"
 #"v\351\212\21$\1\264oe\241\272\265"
 #"\362?\241\236.t{\221\2\232\t\352"
 #"\272\2754\314\352o\337An\232\31\253"
 #"\306+\326\364\264U2\220\214\217\5\373"
 #"\270_\e\274Z\220O\303\346S\31j\241N\36\253S\225\310A\322=\275iG"
 #"D\233\241s`o\5\255\325\243\nF\300\ax4ToX)\305\220,"
 #"2\26%\325\n\230\247`j\327n\24\262\b\237n\236m\252\274\212,\1\267"
) 500
(
 #"\213\217X\262@\nX\a\266f\225\234"
 #"\311\353\31\nF\341,\245*C\205\331"
 #"\222\352\344Q \265\315\216\334\220\213\30"
 #"\260\217\232R(\333>\25\230e\360\352"
 #"\257\312'W\340W\311\235\201\337\177a"
 #"\370\357\307\220t\230\343\237\376\r~\360"
 #"\265\266\n\\\24\376\364\271\360\367\357u"
 #"\227\327\314\334$\177g\340\207\337\b?"
 #"\373\227\254{r\342\341\37\337\205/_"
 #"\312n#\262\250C\340\323\e\341\325W"
 #"\t6+\rs\21\244\324\203\215\302\325"
 #"\5\374\356'\302\315\242:b\202\235U"
 #"\22\271\e\366\265\341\277N\243\360\364-"
 #"\274\270Z\365d\5\227\300\\\5\261 "
 #"\233\34\227Uy\2277\312\213o\333{\250Q8_\356\340\v(hI0\336\303"
 #"\331\r\274\270\22\374\352\232u\360\365G"
 #"\233\357\263\17\254\207O\337\301<\223\215"
 #"E\32\17\211\313\357\261\316\24\233-\210"
 #"\326\376\6\340M\256\20g\362B\235\241"
 #"\373\346V\337\251\334\345\335\230T\ap"
 #"\316\244\372\271\250\267P\212\350\335\347!"
 #"\341L>j6\265_\311\345\27\22UP)]\202\250\23Y\350\273\362\367\273\220"
 #"h\341sT\210\263(\177Ka*\233\363\324\277\213vX\250\266%\332\201)\362"
 #"\257\322\227\353\v*e\226\265\vR%"
 #"'\352\240\347\340\362\357\222\302|IN"
 #"\374}{\274\365\260\250\225\3472p\35\363\272\20\22\323\344&%7!\363l%"
 #"\327\225-\311|\336\323\273P\344-,\204Kr\371\305hUVy\323,7g"
 #"\353\353\277\374\303\217\327\331U\340l\t"
 #"\257\376\242\\\276\277#\360M\5>}\v\363R\204Z\201\253\307pkKQu"
 #"\201?\376H\370\317\363\252@~\365g"
 #"\345\345\277\273\275\236\353sx\277\250v"
 #"p\365@\217\210\203\2\27\251py["
 #"\275\217\233\5\274\271\270\273\226x\370\347s\370\362\363\366\362\234"
 #"\201\317\256\340\27_\345y\212\36?\317\340\351\273\366\216-\344"
) 500
(
 #"\235\365\365\343\246\234+#EW\rz"
 #"q\5\317\256\273]\321\272M\24\340\331"
 #"\233\222\0005O\263H\373\217\224\217\336"
 #"\3477\330D\277\2U\252\34\242\2\347"
 #"\267\360\350\303\3355\353\340\3559\210\225"
 #"\326j\304\300\302\303w^+\326\335\335"
 #"c\301\27\255\355 \227\365g\3376\277"
 #"k\230/e\345\267\233\356\202C\250\347\361[\332\330Fy\273\204}\"\241R5"
 #"U\25\362\357rZ\344\316\321\351C\235"
 #"\241\216o+\5\355Y\0\5\231\212\216*z\36\304\332$\267H\273N\320C\301"
 #"\226g\267^K\204: \22\237\233\2042\247\324#\1c\203\321\356\t\253\320c"
 #"R\e\1\371\365o\276(\305\316\363J"
 #"\236\277\201\231\e\256\27\374\357\t|\230"
 #"\263\36\356\242\360\361\333\334\226\17\25$"
 #"\36\22\5\371\277~\334>R\220\234/"
 #"\237]\17\e;\263\337\377\246yq\323\244\246/>\271Z5\272\244\200]\271f"
 #"\237\b\221\1778!kN\31\22v\350\2C\350\3430\3347\352\344\177H\34\241"
 #"\270N\37\223RF\210\230%\215\215X\246\36\357\351t\243\347V0\201e\317S"
 #"\205WHS\177\307\313\n\306\300lf"
 #"\242f\34\275\225\242\200\363\340\234v."
 #"\211j\317\235\225G\vU\262\322~\1"
 #"UH\24f\226\250y\340\316\346\353\241"
 #"\255\311\307\242\262b l%\250\211SF\210I)#D\24\247(9q\225\367"
 #"\324)\240\273\356G:2x\257\244Y\367=k \266\247\252\334\246\276\"?#"
 #"0\263\246a\331\342\210^sBw\376as\210*\25\2\3376\257\253\221\2771"
 #"+\362\257!\336|\211<h\205\f\riY\252\2318e\204\230\2242B4W"
 #"\36\25\322\314W\367\24\v\330D\362\345"
 #"\321\36xH\263\371M\220\0\251o\232\276\4\211>s\212_\221z\21q"
 #"??3$\325'\27&l\1\21af%j\3318h\276\312\32\\\177"
) 500
(
 #"V\235\24\262#B\256r\b\23\247\214"
 #"\20\223RF\210\235B\367\367\5\347\224\314kk\300U\1k\204d\300\b\2651"
 #"\302bfz-\225\213\304O\274\217S)^I\323\366%\3U\220\31\203*E"
 #"\4lO\17t\e\34\255\371\352\352u\307\34}8Z\245\2342\216N)G<"
 #"\0\2421zN\311\243\323Uj\355z\222\372\3301z\245d\21\244~j\30\275"
 #"\371\332ry\373$0z\245<D\4\225R<g\270\376\377\36c^\332\263\376"
 #"c\216\32359e\25bVUDd\375W\"mH\36a\326\350\364\260\352\0"
 #"\252\330\244\271i\317\32AflU^^\234\16:q<$\232\207\e\300\352\224"
 #"\37)]\211G\226\345\e\321\244\307\263\1\306Hc\350&I\337P\311q*\4"
 #"\366\304)\17\215\230\207\306D\364#\304"
 #"\244\224\21b\364\223\307C\300{\215\212"
 #"\22\310j\257\302\2761)\205\374\321\205"
 #"e\332\256\25\325\\!\207P\312d\276"
 #"\"\261\323\1\236[bR\312\b\361\340\2252F\367\375\3368%1\202\251u\211"
 #"C\354\331\253\223\272@ci\340\276q"
 #"oJ\261V\230%\233O\216\333\27\234"
 #"\357&\365\373\306\275\232\257q\365\317\361"
 #"\340\301s\312\0301\270R\372\206\332\17\211\2217oxN\261\211D\21\366}m"
 #"\3047\6f\265\t\240\352\270\310~p\245T\303\376\343Cb\204d^m_\346"
 #"\24\267\34\217R&N\31!&\245\214\20\223R\"q\3107\24MQb\342B"
 #"\362J\316G\207\300\244\24\302\344\177\237"
 #"\230\314\327\b1)e\204\230\2242B"
 #"\234\f\247x\245\361\306=1q\321\205\261\341d\224\342\2346B\3623+\314g"
 #"\307g\f\216\257\305\epJ\307\\\235\214R\266\335k<f\234\214R\264v\""
 #"F\361\371\30u\25\344\24\357\265\21Q0&\356"
 #"\355n\241\274!\230\201\317\0173F\260\201\27\344"
) 356
(
 #"\304\34\232&2\254C\240\344r\350\254\227\360aB\301S\214nS\255\24*\2"
 #"gs\23|\245j\35\313\264\371\214b\b\213\271\31tc[h\243\\\232)\37"
 #"n\273\327\343\255\315\17-\30\n\352\225"
 #"\333\245\357\\\3543F8\2337;g\270%'D\232Q\330\303\355F\211pC"
 #"\242\223\341\224\261a\27\e\260\2273$"
 #"\3074\320\272\2322t[\207\340\311\350\323V\275o\36V%\1\3627\6\222\210"
 #"~r\b\257H$.\334\276\313\311}J3\222\20\20\325V\210>\227\370vY"
 #"=Sw\23\371\317#O\3719\204\247j#\37\315\333\245-\276D\3521\357V"
 #"\213\301Va\226\330'\206\307458D[\nY\fe\t{\23\375\230\4\177"
 #"j\230\336\n\261\3\366u\357;\275?"
 #"\305+\340\251\330\262\20\371\237\n\32\244"
 #".\262\27Os\2677\r-}\303\216-\346\346`\e\f\16\215\202\324+\30\233"
 #"Rt\375\353\201@\0173\a\233f\364"
 #"#D\324\2019\23\206G\233\214\203\346\313\344GvoO\330r\272$\17\200\f"
 #"\367\264@\376R\233pa\315\3s$'\353\2768e\2791\302\331\"\260h"
 #"\263\3\242_@p\312\202\335\25\207\220\315D\364#\304\244\224\21bR\312"
 #"\b\361\177\366\37=@~yB\245\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"WATER-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          21 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           5 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\b{IDATx\234\355]k\232\253(\20"
 #"=\205\232\244\273\357\335\361\254e\2266"
 #"{\230\276\335\211\17\240\346\a1\355\3#\n*f<?\372K\322\6I\35\240"
 #"\250\a%\375\365\367?\214\3QAl"
 #"\335\201\3}\34\244D\210\203\224\b\221"
 #"\332>\24\344\366e\35X\e\21\1.\267f\0\34\221&t\225\227\r6\31\366"
 #"H\21\4\374zO\221\214\314!f\340\353\246P)v\22\244\v\336\317\t\316\31"
 #"aL\336\267B\343V\352`\367\235\v\6\220%\204_o\thFg\224\6\276"
 #"\256\262G\214u\246$\2H\23\32\34\215D\341g\t\0\b\1$O\356[\337"
 #"\233\bF\"\21\260BddUw\311\25\206D\3737\254\244\0\317\227\a\346\211"
 #"=p\205C\233\217~mM\b\360\350"
 #"\303\34Q<\223\257\277\242\17I\216\203\240\347,\23{\303\340Lq\1\221Yr"
 #"\232\360Q\300\314\200\326\343\327,2K#\302lR\210\200_oI\217\4\37\345"
 #"\177-4\362r\204\25\0Z\207\333\\"
 #"\304\b\257\231\222\b\372\21\16\231Q\354"
 #"\243\204\265f(\207\353^\231\20\300\223"
 #"\24\240\261\222p\343\265\207\324^]\340"
 #".\30T\364s\24\352\343+/\276\346?p\377\235s\6\3223\371Zg\n\363"
 #"\335\16\231(\334\0203\245\v\262\264\27"
 #"\2155\177\357\227\346\351?\371\231W\242"
 #"G\212\276[\352s\241\2+\341\313Y"
 #"\340\234\265'\364\255\320\310\253\355-z"
 #"\2 \25\343\363[\316n\303\311\315\2\0\225\232?\24C\v*\21\204,\245\237"
 #"iH@Q!\16\213\36f\264\207\226\227\225\224\b~k\17\334}\21Q'C"
 #"wew\256\373\210\270X\f\336[\342\245Q+"
 #"\304\271\vDH\22\327\332_DOJ^h\224U"
) 500
(
 #"\333\312W\332M\330\347L\340r\n\264\30\20 %\343;\237\277\trE\364\244"
 #"(\315\220\n?,\260\233\r\305l\374r\247\214\302\f\361\251\276y\17DO\n"
 #"\320!\301u=\252\335\352\201\4\271\"'\373S\364\377\a\34\2448\202WL\f"
 #"pZ\276\210\200\217K\202D\214\307\317"
 #"}p+\24J9\356\21\270\234\214\225\3374Y\362R\243\250\306\335\376. \0"
 #"\245d\334\212\206R'\202^\"\6n\201\263N\311RB\232,k%\224U\355"
 #"\377\177~]\"\310(\360\6*E\340*\320\26\230\0\315\214Br\313j]+"
 #"\352\351LJ\35\361[r\254Lj\233"
 #";\306\375\2\35\2639C\327\300\313\353"
 #"\224=z\0&\221\22\213\307|\n\366"
 #"\330g\247\345\213\31\370\316\25\304\302\213"
 #"j\245\302\255\333\4\240\254\30Z\317\263\300\325JJ\335\6g\235RJ^|K"
 #"\30\232s\343\r\230\327\347-S\231\234"
 #"I\331J\351\371b\217yb/\257\350"
 #"\367\210\335\221\262G\305=\25\363\223\361"
 #"\0\274\235\5\222\344\307\v\3130\361\363"
 #"\220J\362|\228\245\355{d\311\262"
 #"\236\205)H\4\341\355,\236\257\354d\302\r\267B9\251\345\371^b\2N\231"
 #"0\361\363;\230\201\242\322\220*\334Z"
 #"\236%\324\213\211\304\222\315R\207\a."
 #"'1\372{\245b\334\n\267v\375]\367\r\313z\211\24\243\307m\"!\242\205"
 #"f\326\375\263\343\e\230\326\377\335\351\224"
 #"\377\3\374I!\313\313@\243:\312\331\261\2f/_\314&K>)\333\34("
 #"\355\246O.'\341\344u\316FNv\205@j\321[R\261\323\t\200E\372\343"
 #"\363\345\242\322\275Y\341\252\340O)\341"
 #"\354\220\324\2604!\314\206\224\267s\273"
 #"/E\251\221\227\313\336{\b~\207\206\36\177\246\343\2619\210`\211\352"
 #"\6\25)P\256\305\\\34\212>BlFJ\320]3\3715h\373\372\226"
) 500
(
 #".\263\315R\214\362\212Q\251p\211m\322!\266o\3\221\t\31|u\222\354\324"
 #"6:\36\300\206\244\224\2256\353x\210"
 #"!\351\230\2407\4\245\30\327\246\213\337"
 #"\263=_l\232\214\27\354\207\ah\207\6\337\254\217C\321G\210MgJw\333"
 #"\351;@C\267\347\203\356\314\233\262*lF\3129\273\273\375\e(+=;|"
 #"\233\245\204,mO\374JjTr}\213CkF^\325\341sS\232iJ\""
 #"\337\206\244\334-\372F\362\226\326\214JNO\236`\0Y*\360qi\267w\315"
 #"\201J.\177t\241\t\2029\307x\315Uk#3\345'mFJ\317\335\37\""
 #"\321\257\231\240\267\261\247\300g\23s(\372\ba?G_\377\361)p\340x]"
 #"\263\214\210\267b\246\306\f\331x[\313"
 #"\r\225\202\37\325\342\204\36)D\300%"
 #"\e\17o\16\241\250\330I\251\25\25C"
 #"uJ\26\311\231\311x\4\243\324\257y\373\363J\256o\2263Lu\301\367\263h"
 #"-\307\232\201\262\324NKt\237\24\230"
 #"\204\210g\225\361l\250\a\204T\22\312"
 #"!F_T\332\234\207\17\204J\362\352J}\bB\20\336/\311\343=\221\31p"
 #"\245%\324a\375\376\320?\246\272\324[UCv\230\0\267(&&\227\36\212>"
 #"B\354\342 j\264hT1\32[\256wa\321\277\2\210LyE\227r\274\273"
 #"\260\350_\5J3\276=\252>\331p\350\224\bq\220\22!\6KK\3152\36"
 #"\233\16\255\200\333\342\271\31/\276A\264"
 #"\336}Cx\35\34\320#\205a\254m\241\246{\b\31F\361\205\f\245\246\2119"
 #"*>\225\227\272j\335\334P\200\250\213"
 #"\2775\332Sw/\366\322\350\223r?\337\30\v.'\201\267\263\230<[\210\200"
 #"k\256!g$g0\233\314\314\337om\253\274\250\30\225\234_\232"
 #"\320\25\257\253S\"H\362\233\213\327%e\307\bn\247\330\316j,"
) 500
(
 #"\221\256\323m\323\246\224m\237O\351K7-w-\227^pRN)\365\316\333"
 #"WR\a}\336\212T\334;\302\227&"
 #"\204\244\361\310\37f\363\34\230\363\251}"
 #"\364\315\345\0307\221\271.o\24\340!"
 #"\370UU\235\202\240\244\20\314\323\202N"
 #"i{\267\364\371\315(\252p\205\v\212"
 #"J\343Z\374\2706\30\246\312\322\307\271"
 #"}\337S&p\312\332\375\273\225\332\251"
 #"\356\262T\214?\327m6<\313\350\2245\346yw\320\272l\317v\22RX\206"
 #"\2245fy/#{'\22w@x\207\344=\205\375\261\2640\360\363\374\16\217"
 #"f\2732\267y\rV\262\270\227FPR\30&\373\275\225.\304&f?w "
 #"\2330*\267j{u\217\360\21L\222v\363:\ej+?v\4\237)\241\275"
 #"\1y\351\366\364!\23\363\337\360\374B@\34\306c\2048H\211\20\3565$\353"
 #"?C\272ab\302\331\253\303G^\356\325V\23rR\326Rq\24'~\267\4"
 #"\221\221\327\30\230\355\e\17\347\272\304\277"
 #"\336\222\247q\215\272\376\310\347U:\325"
 #"\26~U0\200T\20~\277\247\20O\216~\327;\301\317o\307g\a\17a\314"
 #"\334x\314\244\300\221\307=\242\227+m"
 #"\371\377\320\3123M\321\217,KG\206"
 #"\244;\236\211r8\353\276\361f\222\341w\317_\345\200.o\327csk\34\257"
 #"\eU\227\1\364\251\225\224\256\222\252\37"
 #"7>v?\202yty\326\371\\\351\371\312?\21\375\r\206\326\334[\207\205 "
 #"\210\356u<-\tn\fDF_\214\301\267\374|\217\24qW\352\3152\204u"
 #"\207\\\360\321\3106\257\361\347*g\273\356{1z2G\327\272\256\373Kf2"
 #"\335\353\353\210L\225\245k \17\3\263\211\25\375~wS\303>\376Q{\212\21"
 #"\341\351\316a\251\316\f\265\327\362s\rjN\352"
 #"]\267\304\362\265\2063:\330Q\210\265\360\264_<"
) 228
(
 #"\360zgX$\227\2709\230B\311\206"
 #"\272/\206\\\367\221\34\257\263\201\6\337"
 #"\264\21\234\24\233R\347\221N<\203\276"
 #"\307\324\233\272Bw\b\241\301\353\342\231.\f\23^x\214\0312\357m\b\36O"
 #"\371\316u\357\254\241\303sj\6q+5n]\327\275\245\275\230]\367u\274\347"
 #"\363\252z\3\3056n\302\247\0301\aM]u\35\354\21M\n+\30f\346\272"
 #"<\221{\277\211\23;\205\213h\6I\231:\322\251y\303\310G\255/&\2179"
 #"\232&O\353\362e\252\302M\227l\353"
 #"@\377\253\341n\267\315\255\343?\244\324"
 #"m\350\221\242\31\370\272\372=\364\376E"
 #"9\201\224\214\177\277\346\313\306U\357Y"
 #"g\312\206O>\212\32\214u6\24G\214>B\34\244D\210\203\224\b"
 #"\361\37o\346z\333\241\340\26\202\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WOOD-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          29 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           9 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\17\355IDATx\234\355]\331\226\344\252\261"
 #"\335\1h\310\254\251\217\217\275\374\327\367"
 #"\307\356\27\370\17\354\265\354>\3355\244"
 #"R\22\20~@)\201@\231\344X\331\307\265\37\252T*\206\0\2\"\210\b\20"
 #"\375\343\377\377\217q'\330n;\364\332"
 #"\4\357\352\252@Q\250\340]\333\366\350"
 #"z\35\274+\313\2U\31\246\233\203\210"
 #"\320l\336\361\376\376c|\307\314\250W"
 #"\17xz\372\355L\352\367\303Z\213M"
 #"\323\201y\327\335\4\266\32m\363\35\314"
 #"6H+\256J\311\27N\302\327\240\334!\356nP8\261\230\22Q\370La:"
 #"\367\234\277\ns\252\222\233\200\203g^"
 #"\240Y\245\b\364;ao\25\231y\231\355\2206\354\334yZ\"\202\0204\313\313"
 #"\260\306\204\3443\a\351\210\226\352\5\374"
 #"\216\330=I)\2034\202\362x\223\231"
 #"\207v\354\332\342~\247\352\216\337\305\351"
 #"\304B?\253M\323F\205\325U\31uND \200m\333\303\32\353\3655\241\256"
 #"\nH\0316\362\343\375\25]\277\5y"
 #"\203\362\360\370\202\252Z\5\3[\226*"
 #"\22\352M\363\206\367\367M\220\267^=\342a\275\16fK\252}Z\353H!\220"
 #"\262\300\313\267\277Em>\4\"B\337\267x\177\373\21\276\27\nE\3710\275`"
 #"@H\201\272.\341\227*\4aUW\1\275Z\v\264\rE\f\253\254\r9\351"
 #"\300X\4\225\263e\30k\275F\245\247\243\261\32F\367 \220\343-Z\236e~"
 #"\377\20\21\230\355\230w\254\201-\204\20"
 #"\a\227!f\300\30\36\313dfH)\241T1RJ\310_\316\230\31\306h0"
 #"\3638O\204\4\204\231\372\200\231\335"
 #"s\330\317\0000\233\335\361\252\260C\300\226\271\343\341g"
 #"\310\3422\320.\361Qu\370\352\343\256g\211\23\255\335"
) 500
(
 #"K\237\367\247\327qc\35G\3203/"
 #"\207\300 \304\214\224\335\310\205\312O\26"
 #"\364\23\367\235ZBN\35\t9\341\375<\210Y\262K\323\232R0F\221\223\203"
 #"\205\301Sa\3039\2716\273\312\354\354"
 #"o\367[\210=\245\357\352&\202\20\"H\227%\230\331\3152?/\21\3\231\202"
 #"y\232)\323\362z\364j\20\24G\303\262\211\221\26\22bh\2137{\26\3730"
 #"1\200\t\250\365\252\214\252\2165 \213"
 #"\367\267\37\320\272w\353<\\\247><\274@\312\32~GR\242\303\326\17/X"
 #"\255\237\202wR\312\210\310\256\357\241\265"
 #"\201?x\252\\\341[\275\16\230O\2108o\n\205\222P3\245#W\263\234\203"
 #"\231\241\212\22\317/\177\215\312\213\333L"
 #"\321\300X\313\330\266\2357\240\200\35\344"
 #"\323\234\251\225\343\302\303\320\272\207\326\35"
 #"&\216\25 \2\244<,p\245T\21\221\251<l\31&\20\232@Y\224P3"
 #"\215,W0\247\324\356s@D(\212"
 #"9\23\347\322\303\260\326\302\3624\4\326"
 #"\332d\312\375\306\242\31A\276\256M;"
 #"\365#\v\234\275\236\207\e\305]\336\273"
 #"1\317\235I\313N\377\334=\247\31\346"
 #"\3604\331\307i\227c\302=u]\226\333?\3\276\314\311\201\232\v\360\bL`"
 #"\233\346Vf\6[\273h.8\0164"
 #"\356\374\375]\17\263\35\246\371\375\314\226"
 #"c\301\274k\233\35\224\27\0\264\307\314"
 #"\362\343\373\277\16\27\n\300\350\336Yk"
 #"v\202\n\300\333\317\377\\\224\213-\307"
 #"\203\257\333_\177\246\0\256\17#\31\302"
 #"\34i\265\0\240\272n\233U\350\274c\30@\337\267\351\304'\"\320^\a\230_"
 #"w\202DH\363V\374R\235\303\205\267"
 #"\340\340?\301$9\32wg\272\377\302\2313\345\26H\273J\322k\332g\265\345"
 #"\230}S\16\324\313o\177?\207\236\253\202\0t\275F"
 #"\257\215o\240\201\35670\272\301\270\0363\243^?a\265"
) 500
(
 #"z\272\220&\230K\37A\353\16\37\37?\17\354\303\30R*<<~\203 :"
 #"H\241\252\252\325\5\311\274<,zX\3561Y\22\0cB\5\203\341\374$e"
 #"\275\272\256\205t\16\"P\2733\263,\327\313\354LCeY#\307\202\222\364<"
 #"\336\23&\372\6\3730\323B\373yP1o9Sp\344\314\314\243\357\227\20\364"
 #"\211m\353'Pq;\374\22\203\22\211\307;QN\216\265\347\345\246WM\323\35"
 #"(qp\203\366\233`\367IDX?<C\312\2>\347\266]\357,\275\373l"
 #"=\4\224\205\212|\371M\363\216\256\v"
 #"}\371e\265\306zU\215\313\4\201\360a\4z>46\204\256\335\240\331~x"
 #"\256dFU\256P\257\36\366e\\\204\261\26]\247\203\211J\4<=\377\345p"
 #"f\6\332 \257\363\305T\245\212\2642"
 #"\245\215\211\362G\345\261E\337ma\355"
 #"\224\226\210\260Z=\202T\310\1\306X"
 #"hm\16\252\177\205\222\321;\335w\350"
 #"\266M\320\333eYC\251\311\17729\314\366\303)\4\32]\353ii`H\221"
 #"m\30\217\300\226\241\265\231bY\230\241"
 #"\224D]\256\16N^c,\272\315\326\231\356\aF\227\202\201DTg\26\205\264"
 #"\363\257\317\343\257\226\322\237\272\274P\\"
 #"\317y\240\221v``\236\363\\\217\376"
 #"\257 `\344\360\322\304C\214\302\304\\"
 #"K\264d\311\224\363\302\f\316\301\265\352"
 #";qdn\324\374\254A\241\304\323mp\201\372\222E\234\330\2737j\276Z\325"
 #"\261{3\205\252\372\26\350\330\4\347\346"
 #"\235\353\335UYD!<\315\346\r\272\357\2YQ\225\317 \n\363\257V\17("
 #"\313:$P\25\247\355=\230!d\1U>\5}i\f\343\355\365{@\237\20"
 #"\nR\205\365J)P\316\334\320R\b\314\373+w\251uA\216\305"
 #"\354e:\277R\t\201\233.4\26?\251\316\3625*'\320\200\206\r"
) 500
(
 #"\214i\3\2\222~\4U\241\230\321}"
 #"\352f\220\1\220\220\220\262\204o\r\320"
 #"\375\26\333v\23\244\224\252F\201\251b"
 #"W\247\2\346}H\204\334\376\232\343\230"
 #"\274\331\252\310)\235\23f\311q\211\346"
 #"\373\362\217\244d\240g78!\35s"
 #"\365\375\263\215\264\277\304\346\361\177\r\177"
 #"\332A\371ln?\a\352\365\347\277\257^I\337\265N\206xKS\363\361\212v"
 #"\373qRy\272o\243=S\273\335\300\2300\302\336Z\vc,\374\r\6[\3"
 #"\266\341\206\331p\2701\6\30Z\b\364\355\347\360\254j6oW\257d\264\375x"
 #"\357\332@\330\36[\0360\227OZ\267"
 #"\311\230\201\34\2778\263\5l\37\2743\f\0340@]\r\237\346y\274|\275q"
 #"\250\350\261\371\347\177~\326\2\370\247\225"
 #")\2772\324ml\aK<w\355\272\357\275\336t:\365\364\374\327\344?.\211"
 #"\256\327Q ZQ(\310\314\340\362S\241\215\31\242\370'H)\223\26\352K\302"
 #"\30\215m\3631y%\231!\244rVuo\215\265\326`\363\361\32m\244\325\372"
 #"\341\371\252\4\2\0\232\16Zk\370\234Q\257\312\253wN\327il[_\2003"
 #"\312\262\210\315\35\227\4\21\372\256E\333"
 #"n\201\241\263\231\\\340\304j\375\344\271"
 #"\35\\\320E\263y\213\317<\336\304\247"
 #"=\363\263\357\336]\273n\307\251\363\203"
 #":\327\255\327\35\24\230\325\3539\266&"
 #"\277\20\346&\217\21_\202\376\16q\272"
 #"\en\37\306\203\232\223\315l<5{\341:F\244\270\216\207#zcx\330\236"
 #"\31\222S^6mS}\243\e\354\210\362\242Aa\6\372^\207\205\f>\365\234"
 #"N\3356\37ng=&%(U\241\236\231\274sO\220\245\320u[\364]\353"
 #"{yQ\2265\212\262\n\322I)\234\374\360\322\315\343\2vk{\260"
 #"\231e\3472\250\352\365AZ\254e"
 #"\364\332\363\275\17\226\361\365\303s\260l"
) 500
(
 #"\t!\221\273\363I\314\24F\337\353\361|\374\216\323\n%\17\16\n3\243m7"
 #"p\221\374\223E\366\371\245\214\374,'"
 #"c\20\244\233\315+\374\336&\"\224U"
 #"\35\324!\245H\fBT\34\264\356\261\371\360-\e\214\252^g\r\n3\243\353"
 #"t\350\267\227\22\353\365c\324_\271\355"
 #"O/_\236\363\205\26\0341\313p&\372\253Z\n\0063K\20\272s\316\351\1"
 #"\204m\334\235J>\232\244]9\264[\375Nc\302/A\177\207H\317\24O@"
 #":\2569.4\323wV]e\306\f\\\310\336\232}\216`f\357\347\356\315\251"
 #"\2451\363.pe\bk=\36\211A!\24\245\202\03274\273\253.\16w."
 #"\21\241\256\37P\24\2257\242\4\313\204"
 #"\266\355\203\200:\245\344\301Ky\222`FY\326\30321\2529(\312\352d\231"
 #"%\204\204T\353\241\rCL\226\314\213] \"'/g\227\261\264]hu\26"
 #"D\321e@K\210R\321\240i\235\212\252~\b\226wf\240iZlu\27\f"
 #"\254\0204h$\307\243(+\224U\30\350p\262/\237\31$\24T\261\202\2578"
 #"\b\231G\233\20\204\322\v\250#\"hc\260\331\264\201\360\227R@e(K\300"
 #"U\366)i?\373\245\227\261\353\354\312"
 #"\317/\323_\276\20,\341\371\355\377\22\364w\210\3338\271(z\270px\352y"
 #"\30\257\276\32\301g]!\22\317\f\36"
 #"\267\26S\231\236L\234A}\274\377H"
 #"\376\343\222\350{\343L\367\36\r[V\350\304\376\23P\267\1\301X\v\335k_"
 #"\244\300\32\1\253O\221y\4\313\26}"
 #"ov\252+\300\200\21\4\266\333 \332"
 #"\324Z\223\2760\307\217\26\274\26R\f"
 #"\321\267\347\231\227.\211\245\t\261='\2725Qf\333\244\352MDH~\346\22"
 #"r'\253\327\".M_ny_\202\376\16\261p\5n\234\360lKv\206e<9\2359\336"
) 500
(
 #"]\247\247\375\222*~\270^\227.\305"
 #"\306\34\375y\213\0257v\a\263\363m\263\267\243\307\260\3?u:km\a?"
 #"\364T\200\224\"\332\321\367]\e\5\324"
 #"\25e\5\251\374#|\204\276\337\272(~?]QC\25\25\374n\263\226a\214"
 #"\177\323\36C\210\271\345\230`L\357\\"
 #"\1\376[\222\20\322w\e3\210\4\224"
 #"\272\376\342\22\4N\20\271\206l\2326\bt \"\254W\325p\v\336\261U0"
 #"\232m\27\0050\254\352\nE!\203\353"
 #"\373\336^\277\243i>\2\256\255\327\217"
 #"\356\322\2\317\215\372\366\372\35}7E"
 #"I23\312j\205\307\247\337\202\362\332"
 #"\256G\333\206\346\216\262P\250\3532\260"
 #"\315m\233\367!\206`\242Y\310\22E"
 #"\371\30v\226\222\303Q\210\353\n\303 \304h27\247z\376\f\337v2[X"
 #"\36/-\r\21M\207:d\347\351\\"
 #"\376\357\371\355\270\356\"\366%\350\357\20"
 #"{L\367<z\36\2278#}\215m\234\226\207YqP\375fN\nvw\200"
 #"s\374c\177\31a\305A\275K3$\236=\261+\200y\371&\273\24r\373&"
 #"\205\344\240\250BBZo\22-\230\34"
 #"\332\266\201\2656\350\246\242\254\"\353\257"
 #"R2\272l\237\22f\373\321\307\356\a"
 #"\254\261\305v\363\356e\304p\315\372a"
 #"\bI\361\21\271\231{\230\331\35\23\234"
 #"\237\255\27B\5\37*p\345\345-,"
 #"\326Z\364\375\326\337\320\17G\315\v\317"
 #"\335\340\36S\247\273\22\246{\347\378"
 #"\4f\306\346\343\r}p,\201\360\362\355\367\350,dY\304G\325R\250\353\a"
 #"\324\365\3249D\204\267\267?\360\361\376"
 #"3t\327Z\223\265\23SRB\0354\3013\212\242L^m{\n\210\b\326h"
 #"\274\277\375\b\356\225!R(\252\347\310"
 #"}!\245\210\30\376<\2312\353\227K\357\200\357\3752\237"
 #"\243@\371\v\357\227\240\277\t\216\343\326\363\234\\\34\372\343"
) 500
(
 #"\2770a\36\36K\203\2420\336\23\303"
 #"\f\360\202\351\376\234\212\313\262\206\2202"
 #"\b\307\261\326\231\352}\215-\265n\376"
 #"\212p\337O\t#\344\211(P\36\230"
 #"\341.\302\251\327\241\6Gb\270\36\336"
 #"\223)K\376\224S\t\334\335b4\307"
 #"\246i\321\315\216\271\255Ve\206\300\275"
 #"\177\30k\321lC\363\216\224\2\353\225"
 #"\37\231\351\"\354\317\371D\341md\312\237ey\273Q;n3(\277\376\312\345"
 #"p\243v\\\324\311\345\302\274<\0374"
 #"vAi\247\372\273\227\277\234\220J\e"
 #"\356\374/\217];\374 \300\351k\31"
 #"\227\253G\265\333\323\217N\317\301`\350^;a8le\211\200\25630\372\264"
 #"I\351\276\331\262_\303#\2\214\351\320"
 #"6\247\235\313\317\205\261\356\243m\201W"
 #"\203\5Z\322G\307\36\357\203\372\361\307"
 #"\341\17\20\234\v\347\233>%\21037\17a\333|`\333lN\250\343|Z."
 #"\315\v7\334<\236\322Y\307\346\271\246"
 #"$\276\235\266\362\265\243\277C\334\304G"
 #"\177i\344\372\374o\205s\314\364\311K\330\346\327\2523\0kl0Y\t\316l"
 #"}/\232\255\265\f;k\264\20\264\270C\276*-\303\27[}\331/H@\252"
 #"\342\260\217\224\31Zw\321\0\6\37  \270\257\3754M7\34\257\303\240A\21"
 #"V\253\362D\37\375eA\344\276Y\334u\332?\t\201\252,PU\352\246\364\21"
 #"\21\272n\213\267\327\357S\3072C\25"
 #"\25\236_~\337\373\261\1\"w\326\362"
 #"\307\367\177\2019\274c \332\247\354\226"
 #"\206\361=apr\t\247\366\335\301t"
 #"\231\307\371\306q\272\237C\307\364\17\214"
 #"\347g\226(\332G\357\21\202\376\226\37"
 #"\3018\200\4!\316\245{sJ\316\303\2\275\3279G\177A,qb\354{?"
 #"\317\177>\3071\aI\243\372\307p(:\311Qw\361A"
 #"\261\211\317\17\n\221\267\264\244\362\272\e\365<s9\2716"
) 500
(
 #"+)\203(\371\\!o\255\205\235\5\374\245@B@\312\234\356!\bY\214\27"
 #"\31\270\223a\22\306Z\247\214xqh\271w\a\\|P\332\266\2076\306S\253"
 #"\tu]B\311\303\235\326\365\32}\257"
 #"\203\274\272\377\200\321\241+`\375\360\214"
 #"\365\3721tWd\214\211\23\314\r>"
 #"\336\177\356M\307\354\316\321\0372\27733\204P.hov\242a\353\231\370]"
 #"p\206\273\323\370S\216\327qd\247\212"
 #"\303u\2263\307yw\37\370\204\277T"
 #"\215\206\317\23\204\b\273\331\262\257s\230"
 #"\217\240\31@\312\1?\317~LqW\331\321G\355=B)J\366\25%\37O"
 #"\306\275{A\27gJp\216\236\334\334\314\275\326\"\n\274;\202K\346y'\246"
 #"\235\5\313\235\210]``F\252\223\353"
 #"\210J\e\25\1\n\315\232\v\274\221\34\24'\220\246(yg\32\327\360o\261u"
 #"\273\374\370\22\235],\323\230\27\371\234"
 #"I\263\274\0\240\224\2Q\21\6\34\220\30|\345^`B\346>E\b\tU\224"
 #"{g\234;b\235\271\262\223\273\3\177"
 #"\377\20\272h\177k\255\27+A\2606"
 #"\235+\31\214\27\336\34\347>F\374\366"
 #"\372\37h\355\177E\216\360\374\362;\212\242\f8\257*K\31499wP\312\242"
 #"H\234\341\217\313\353:\203M3]\312\343.<(\202\363\354)\360p1B9"
 #"\273\355(\215<\232\245\20X\255\16\5"
 #"\362\21\254\265\330\266] [\254\335\335"
 #"\26\25\326\225lE\252\23-\263' \31\200HJ\257\245s|9X\316\353\357"
 #"\336\t \3'\373\247\b\373\334\345\346"
 #"\3303\355\371e\356\373\377\264\f\aK\347\3022\232-\350\23\306\230OApy"
 #"\300\216\2323\30\341\26H\367\3752sd\371\350y!h\fW\360Oga\26"
 #"\a\0\360Q\262\353s@\341\363\36R\325\374\230Z"
 #"\\\26\201\355\356x\34\0\357\340\2371\275\353\210\233"
) 134
(
 #"\232f\1k4\254\235\374\342\f\2061\200\326|\216bv=\320\340n\260\32\360"
 #"d\bs\372#u\352\217\357\377\314*"
 #"\227\331\16g4\246\232\336~\376\e\237"
 #"\261l8\ry&\374\267\327\215d\271\4\222gwR\37\367\261\366\260\35\310a"
 #"\336d\36T\272\317`\315\224k\364\256"
 #"\354\330\v\310c\eu>\247\337\23\177\336\23-\247\343+p\342\16\3615("
 #"w\210\377\2\200Y{`!\370e\223\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"GOLD-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          25 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           7 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\r:IDATx\234\355][o\e\307\25"
 #"\376\316\314,)Q\242l+vl'\361\245N\e\243\227\0\t\212\244\r\232\0"
 #"-\372\320\e\332\24h\321\242\17\5\3723\374o\n\264o\1\222\227<$@S"
 #"$@\34$h\n\3E\234&\266c)\216\353\213|\267%Q$wgN\37"
 #"f\227\344\222\313\335\345^\304e\304\357"
 #"E\22\265\334\235=\337\314\234\353\314\320"
 #"\2313g\30sT\nb\332\r\230c\24sR*\b\25\365\2411\224\371\206D"
 #"\f\312\376\365\257\r\322\312P\210Q\3551B\n\21\320\\r!\4\2031\271t"
 #"w\332\22Z\357mV\244`,7<\304\211\217\3000\206\320j+\360\20/!"
 #"R\214!4\227\\\374\341\327Wpp\2653\221p\211\0\317#\274\361\366q\254"
 #"_]\202\222{\323~\3604\341\350\343;\370\375/\277B\255fF\4\36@J"
 #"\306\235{u\274\366\346\tln;\241\0213:R\4cu\265\203\325Cm`"
 #"\222\36O\200\347\22\34\307\0L\0\366&)`\202R\6\217\35l\243^\327\276"
 #",\" \31\6V\336\303\210\320)\4\326\4h\377gJ\20\301^\277G\271\350"
 #"\203\1X\371A\213\261#\205\340\313+b\216\213T\364U\a3\300\343z\340\0"
 #"\246bt\24\360\300\231$\245\346\308\212c\a%\1p=B\327\35\25\22\25"
 #"\314\24\17\f\a6\f\346\370\266%a"
 #"\346H\321\206\360\362\363w\361\302sw"
 #"\240\275\361n\226R\214\17>^\301?\336\337\1790o;\216\203Z\255V\\"
 #"{\264F\247\323\351\21\343y\2\235v;\327=g\216\0240\320lv\361\370\321"
 #"\26\20C\n\34\203\345\345:\264\247A\376"
 #"[23\244\224\2057Ik\335\377\3350\214"
) 500
(
 #"1\271\3567{\244\0\326\242I0D"
 #"\210\204\275\216\372\226`\321\323\326\370\207"
 #"\347\373z.RB\357H\\\312K\17[/\206i\254E\223|\257\3353\r\211"
 #"\330\312d\34C1FH.R\272]\1\303~\307 ;\237\232\202\337\333Q\f"
 #")\373\212Si\366\35\323t\35\200\20\36!et\234\341\3733\23:\35\tB"
 #"\277\3\r\213E\nB\247+\"]\210L\244\20YB\336|\347I\\\337h@"
 #"\372\336;3p\373^\35R\346\233S\3\30Cx\351\a\267\360\334w\356\303\363"
 #"\354\2133\b\aV\272\251\34[\245\34"
 #"4\32\375\366\331\266\27K\212\20\2\213"
 #"\213\213\275\277\27\30x\264U\307\337^"
 #"o@\f\250<c\f\332\355\266\25\222\337\4\255%Z;b$\376\225y\244\30"
 #"\6\256o4\260\366\3252\324\0\tR"
 #"\26\353\e\254\36\350\340\211\343[\3J"
 #"\235\301\206\300\211\1?\206\20\4\251\24"
 #"\244(\246\223D\201\210B\306\3\21\340j\302\225kN\177\24\20Ak\215V\213"
 #"BS\250\24\2\315&\205\310\3r\220B\260\4(i\240Tys5\e\2<"
 #"\2{\1\t\0232\276\213z$x\34\201\241BF\36C\20[\337j\240=B"
 #"Dw\340HR\310\367\376\307\366x\342"
 #"\334\26FZ\4\372j\342\3217\303\201\352HR<\217`\\\32\e%&\"x"
 #"\336\370\270N\221\320\206\300\256\350\351\224"
 #"\0I\217vX`\300}\230)\204H!b\354\264%\336x\3738j\316\370\260"
 #"3`u\212U\352\3451C\304\370\350\334A|vi%\24\353r]\27\256\353"
 #"&|\27x\360\250\206v\247\5\32\240P)U\250G\237\26D\0242\b\6?"
 #"\37\306\20)\200\326\204\365\253K`\36ka\aqPHiJ\r\370\21\1\e"
 #"w\26p\343\326b\250-\355N\e\335N7~"
 #"\212b;gK\351\365?b\206\30\326\252\273\204"
) 500
(
 #"a\203 \16\221\323\227\365\3\252\21\203\227\202C\261+\0p4\20338D\273"
 #"\346\321\347D)a\2264\342\232\206x\342<\372*\265\271pRDJ\313\214s"
 #"\204K\262\202\210\"G\v\221\337\356\4\244\315\343\344E.R:\235N/\"\312"
 #"l\303\345\277\372\351=\34{\"9\277\377\336G\207\261ve9\223\241\3408N"
 #"\346h\357\260N\321\232\360\314\251Gx"
 #"\345\305\333\261\235D)\306\332\225\5\274"
 #"\365\356\1\30C6\323\352G\235\353\365z\246\266\214}V\326/23<\317\203"
 #"\326\332\217\367\0D\6O=\265\211o"
 #"\235n\1\21\311\245A\234\373t\25\206"
 #"\t2\203\356\22B\24\246\260\r\23\366"
 #"\355\353\342\364\351\a\361s\230\303\350\270"
 #"\313\320\272\t\255\373\244\224\201\234Q\342"
 #"\360t@\260yi\270b\300\3\217\6"
 #"\227\27\371\230\34\206\200\4\277\213\210\373"
 #"\241\235\340GI\206\303t+$\253a\340\245\a\3@\2778\244,\23585R"
 #"(K\350d\332 \e\327\242\336H)\2470cj\231\307\37\275p\e\337}\346"
 #"A(B\372\341\271\203\370b\275Yj"
 #"\224 34\341\330\321\16\376\362\307\215"
 #"\236\5&\245\301\315[Kx\377_\213\360\314xg{RL\215\224\23\307\266p"
 #"\342\370\200\360\t\370|\255\t\303+\231"
 #"\224\177\331`\3\254\254h<\377\334V"
 #"\377Ce\320\374\202p\366\337l\363;\5\26125R\206\v\321\210`\25n\225"
 #"\301\0\17X\225\3044\266\240.\17\346"
 #"K!*\210\334\244\204\n\321\362\336l\16\0y2\217D\250\325jp\34\a\200"
 #"5\17\35gzQ\330\257\23r\351\24\245\6\277Np\224\361\35\252\364\325&s"
 #"\214\242\260n\235\267~v\216>\346sM\5Q\260I\354{\270\"z1L,"
 #"\212\267,\213\a\371\225\217\1\4@b\340\237\5\315"
 #"\25\205\221Bd\213\347\316~|\b\347/\354KQ"
) 500
(
 #"\2275|\3\340\352\265\245\221,cZx\236\a\317\363\22\257SJ\r\351\302t"
 #" \311\270~\275\216\263\37\257\330w#"
 #"\206\360\353\0Z\255\216\277\360\324\266]"
 #"\b\221\253\16\240\320\221b\f\341\223\317"
 #"\367gN\4I\301\221\253e\323@k\215n\267\e\e\271\r\314\367,\244@\0"
 #"w\357;x\367\203\375\320\246?\250\211"
 #"\0)\335^\f,\310\2618\216\2239"
 #"\212\\\270G?\255\374\376\270\254\342\360"
 #"5\271\236!\30\216c b\342\\i\332\221\204\271\242\257 fr}\212a\n"
 #"'\311\210\340i\300\363\20\312\a\b\342"
 #"\221:\335H\20\0i@q\323\256\344"
 #"\276\222\217q\303\212\310FV\236\224 "
 #"\345\34\300\30\340\331o\267p\372\351V"
 #"hW\a\2555\264\247{\302\22\202q\341r\3\237|\326\210%F\n\306\265\e"
 #"\r\274\365\316S\261I+)\31\267\356\324P\253-$&\267\362Na3A\312"
 #"\240\2\367<\340\304\261\ax\371\345{"
 #"@(\345<$\4\307\256S\377\317\177\227 bt\234\20\214\e\267\27q\355f"
 #"#\266\35\f;\362\34\247|}YyR\200!\5M\324\317\251\307\324\1\20\220"
 #":\25 \210!J\\90)\346\212\276\202\230\211\2212\2\301\2002 \366\373"
 #"\24\371\3251\303#\203\21\252n\330\315"
 #"5\217y\220\213\24\327ua\214\31\253\324\230\355\342T\245Ta!}A\214K"
 #"\227W i\21\332\267\300\214!|\363"
 #"\304&N\235\334\fE\22\244\222\250/\324{\vx\312Z\262]4r\25\343\271"
 #"\256\v\317\363\22-\215\"\213\347\204\0"
 #".\256\255`\355j\35\201\223\352y\2"
 #"\277\370\311u\234:\265\t\364L\345\240zq\241\324\345ue \367\3645\215J"
 #"v!8\264\316\02206<\0235;\315\310\2245\210\271\242\257 2"
 #".\331\36?:<=ZM\357x~\214;\241\323\n\311\221\325\357\201n"
) 500
(
 #"\n~\37\275\300\17\251\253\1\375\246\330"
 #"\32\0043\210\324\244\270\256;\"\220\341"
 #"\277\205\0^|v\23\217\35pC\336\266\343lA\312\244Z]\340\302\345\25\334"
 #"\270\265\30\336%N\251\221N0\254\254"
 #"\205\0\276\274\272\214\263g\217\300\370\241\22!\30k_6g\257\n\23)Ia"
 #"ft\273\335^\205}\36456d\361\312\17\37\246\252\272\37\0011\266Z'\361"
 #"\277\233\215\21R\222B\355B0.\256"
 #"\257\340\302\345\225\360-)z\343\314\252"
 #"c\242\351+\215R\357\255{\237ps"
 #"O\"\312\25\361\27\304@\365\255\335T\230+\372\nb\"R\222<b\306\30\263"
 #"t\216\211\220z\372JZ\322\306 \324"
 #"\224\1\211\31\324\254\25C*R\202j"
 #"\31080\333\355o\255\347>/\306\313\203\2u\312|\336*\nsE_AL"
 #"-tO\322n\347\327\377\0\273\342\201\eC\320)\222_\202xj+\312R\223"
 #"\342y\336\210\365\25\345m\247\305\332z"
 #"\23w\37\324{\316\35\1\270{o!\325&\3Ya\f\341\360\3016\216?\271"
 #"\35\e]\20\202q\367A\35\353_-\207>\17\226\251'!HWdEj\217"
 #"~p#\203\340\301B\210\314\371\211\17"
 #"\317\35\304\271\363\253p\324\340=Qj"
 #"\357\324\206\360\364\311M\274\372\363\253\361"
 #"\251be\360\311\371\325\21R\264\326v\313\301\03003\224R\220RV\247\30o"
 #"\22Le\205\260_+\30\e\207\313\321/\212He\314\25}\5\2218R&c"
 #"\236\255\2W\f\302\230l\237_\aM"
 #"\25\357\16\306\240\277\373\237/\2\263K"
 #"\207\365\214\331\2560\254\314\322\26\34\260"
 #"!\254\2557\321n\251X\v\207\31x"
 #"\370\320\311\254\324\2151\251\266.\317\234"
 #"\206f\302\376}.\236\377\336\275\3364'\4p\357>\341\363/\312\337\246"
 #"q\204\224(\245\236\6DV\221\376"
 #"\363\203#\251\277\223U\251\273\256\213n"
) 500
(
 #"\267\233x]\255V\313\264\303\20k\302"
 #"\361'\266q\374\325\355\336g\244\30\347"
 #"?]\302\205\3136gS\346\230\251\370$R!\354\342\242\2469)\25D&\223"
 #"xV\212\332\"\21\24\362M\272\322Lq\177\311`B\325}^\371\244&%\312"
 #"\31\232\225\2152\3\bb\334\177P\307"
 #"\305\v\373'>\313R)\306\265\353\v"
 #"\220R\371U\3651\317\21\242\374\252{"
 #"\"B\275^\237\211\352\3028H\311\270"
 #"\270\266\202K\353\315L\337g\6\26\26"
 #"*\264\207\344\254\215\212q`F\257\342"
 #"eR\314\354n\253\263\200\252w\257\261"
 #"\244\4\5p\354\273\264\236G\251\34\261"
 #"\262w\365\6\254?\344\272\t\373k1 U\371\342g\6\264\216\227\v\303\26\v"
 #"\246=%6\222\224a\245.%p\362\3306\26\27\342\3y\314\300\315\333\213h"
 #"\355\310\322\210a\20\16\37\354b\271\261"
 #"\35\2734\234\210\261\325\2\36m\327C"
 #"{\335\27\332\26\6\32\213\32G\16m\305\276/\21\320\351\n\\\337XLe`"
 #"D\34\350LXXX\350\375m\f\260"
 #"\324\360\360\333\237\255\341\311\243-\3501"
 #"\253\247\210\0\327\23\370\373\353\337\300\245"
 #"\365\25(UN\245\273\321\300K\337\337"
 #"\304\217_\332\200\e\263\222\313Q\214\367"
 #"><\214\267\336m\242,\373Dk\201#\207\266\360\347\337\255\303Q1\347\4+"
 #"\273\256\362\257\257=\215\355\226J,\20L\326)\376a*J\31\be \306E"
 #"\22\3758\326n\330\3R2\3101\250\305E5\225\331\225\314!\21\340(\3\325"
 #";39\2\322L\324I\223I\t\336\213\t\210\331\n}\360P\260]A\2119"
 #"\221\211\233\302\210\227\215/\273\264H\21"
 #"\272\237\301\255jK\202U\352}a\270^p\360O\272\315r\322\3122\222\24c"
 #"L/T`\330\36\362\265\327w\363b\6\26\0275\16"
 #"\35\350\364\254\276\340\354yJsx\1\30Zkx\232"
) 443
(
 #"z)\213 \245>\214\310\320\375\316\316No-\2431\200$mC\371{x\304"
 #"h-p\354\350&\376\364\233/!\244-\317e\330<\213\224\34?u\223\355\350"
 #";;;\330iI\b\321?`\247\321h\2148\346\261\323\227\r\256\315x\0\262"
 #" X\2\30\365\272\366I\351\v2\255x\202`e\322\365)=\372=<D\206"
 #"\300L\200\311Z\17\232N\216\351c_\22v\323\230\301\17\a[Fl\327\265\357"
 #"\6\177\304\266-\261\233\251p\361&\30"
 #"\331\f$\4O\366\232\222\255\374R\""
 #"\205\237b\35\310\215\215\32$\0o\340\230>!D\377\300bbx\236@\267+"
 #"\312\265G\t\330\334\254\341\326\215F\354y\364R\31ln\326\n\353$D\214v"
 #"[\340\332\265:\4Mf\366(i\345g\fR\265\207\316\2349\23\272?3\243"
 #"\325j\r\25\336\1\365\232\31\330\r\210{G\344I)Csd\247+&\316U"
 #"L\nG\31{\272h\3145\4k\262\272qg\326O\4\2\263\v\243\267\223/"
 #"\215\2001V6\203\262\312\244\350\0030\3\255vxu/\21A\263\202\32\"e"
 #"7\326\30v]\201N7\231\370\"\217\322 bx\36\260\275-\221I\243\20\220"
 #"v\351Nj\235\"\206\n\a\202\303\305\312:C$\16\326\t\333]\213\260_j"
 #"T\376s\307\216\355\304\245ts39\27\342\344\279R\322\26\260}]\262\221"
 #"i1\316\3\317\212q\367J\f\335\307"
 #"a\257\221\"\245D\243\21\277\203\336\244H<;8\356\3029,vC6\363b"
 #"\274\nbNJ\0051'\245\202\370?s\240b\372"
 #"'\336=\21\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"TNT-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          21 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           5 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\b\245IDATx\234\355\235Mh\24M\32"
 #"\307\377O}\364$\2327\357\302\356\213\312\36$\n\342A\324\34D0(\242$"
 #"\232\223^\304\250'?\360\342Y\20\17\36\24\26\257{\361&\342A\211xq\27"
 #"rXO\202\211\210'\361$\n\313\36\263\272\357\313n&\223LOuW\355\241"
 #"?\246{2\351\356\31GSy\251\37DMY\375\357\247\372?]O\315\314S"
 #"3\364\317#\373\fJ\320\306\340K\275"
 #"\216V\30\202\3426C\204\345\241\21\204"
 #"\234\247\375\b\300\230 \214\20P&\372"
 #"k\243\201\206\357\203\210\322\266\225\241-"
 #"\360E\r\24\37m\0\374\231\23~a\200.\320\"\0\377m6\361\277\325\3254"
 #">\202AS\16a\2656\334\36\a\200"
 #"_X\244Y\24\37\21\241\341\373\370\265"
 #"\321\310\234\303\240\305=4\206\267\246m"
 #"\6\300\bEc\246.:\331\370Za\210/\365:\264i\237Y3\206\372\360O"
 #"0\224?\232\25h96\bg\212\205\210\262i\206\220\231\212\214\1\222[\315D"
 #"\177\230L\237l\3372]\2239&+\277\366H\3\203\342\351&=8\23\2371"
 #"\353\234#\363S\250\225\351O\371\246\256"
 #"c\315]\247n\222e\361g\20\202\212f\303\b\202\1'\2'\312y\302\211r"
 #"\363!\3 \b\20D\2059\0\08\242~\331\323\v\"\204\35\361\360\nz\24"
 #"\307\302sz\224\266\345\373Ez\2059"
 #"%\243\327\276\234\4M\321\361&\2669"
 #"\253W\226S\302\362\313\234\"v\324da\a\2\20j\3\222\2>en\24\""
 #"\f\327$\24\227\351\343\230\1\330\306\t"
 #"?\227$f\0\340-\201\206\3219S\0325\201\246\364r\211~\e"
 #"'l+M\364\204\2410@-P9\275\246'\260\222\31\2376\3006"
) 500
(
 #"\16\354(K\364 ,\303\200\267\332\213"
 #"\30\30@I\201\272\347\245\267\2366\300"
 #"\317\f\330Q\222\350\31\b\313\212\360\205"
 #"\b\2411\205}\1@\310\nw\nc\200d\4\315\332'7D\220D\0#P"
 #"<U0D\3758EwB\21\222\b\222\220[}\t\"\310X\17\2104%U"
 #"\320\213\217\223,\177q\2F\20\214\201"
 #"\342\271GS\244'\312\206\234\350e\257"
 #"\r\231h\314\254\335\246\251=3\24&"
 #"g\"T\231\221\22D\325\216\306\30\230"
 #"\354\234\235\374\3642Yvj\226\264\365"
 #"&\235\217\217`\322\0\263s\177;\v\366\26\37ui\373\206\241\27\342V_\26"
 #"\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246X\2103\305B\234"
 #")\26\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246X\2103\305"
 #"B\234)\26\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246X\210"
 #"3\305B\234)\0262\0S\6\\'\330\217\2341k+5\a]\276\370\275\312"
 #"!\273\b\v\230\262Rl\2\264no5HFO\24U8\263v1\250\1\242"
 #"\2\333*Vw\352\0010\332 \212'SLLT\241\312\224\326\350\231\370\34\306"
 #"d6R$ze\265\266&\36\263n_\233D\17Z\307\245\261I\1u|\35"
 #"\212b4\24\215+\321\214c0H\376"
 #"\316\27}\323\352\337\236W\330\372a\260"
 #"\252T\256b\334\0PB\302\20C\326\355\321\270p\273\214\246RPa\230+\360"
 #"V\\@3\236\323\333J\204\341\n\333\365ZA\0?\263\375\17\0\2\306\21r"
 #"\221\352\31\0\303D\330Z!\276 \f"
 #"\321\f\202\\\233&\6%\332\345\327\6"
 #"\200\a\302O\254\330\23\"\302\252\337\302"
 #"\277\276|A\240C$e\350\206\b\212\v\240\243\370\233\226\232~\245\e"
 #"3:\256\363\324f\315\256\34\263\266i\35A`\355\6\202\376\364\3327"
) 500
(
 #"T\271\36L\264\255\242o\275.\235K/ \21Z\276\217\177/.\"\314\230\262"
 #"\236\246@\313/\223\\/\234\365c\250"
 #"\330\257\252f\351\316\205\r\326+=\37\21\320\362aZ>\240u\251\256[}Y"
 #"H\345\375)U\341\234\347\362D/h\255\241u~\341\301\30\3c\254\264_7"
 #"\252\36\333\255_U\2141\b\303\260\257"
 #"c\327c`\246\20\21\224Rx\360\340\1>~\374\b!z\2236\306\340\342\305"
 #"\2138r\344\b\224R\0\242\213\365\374"
 #"\371s\274z\365\nRF\333\344\3020"
 #"\304\331\263g155\225\366\353\206\224"
 #"\22/_\276\304\213\27/\300\343\275\376"
 #"J)\34?~\34\347\316\235K\215\221R\342\315\2337x\372\364i\317\17\246 "
 #"\b\260w\357^\\\277~\35R\312h\323\322\0\30\250)a\30bnn\16\257"
 #"_\277\356K\343\320\241C8v\354X\316\224\205\205\5<~\3748\327o\327\256"
 #"]\230\236\236.4\205s\216\17\37>\340\321\243G\271v)%\316\237?\237\232"
 #"\"\204\300\347\317\237\361\360\341\303\276b"
 #">z\364(\256^\275\n\317\363\6f"
 #"\212\313)\26\342L\261\220\201'\372\37"
 #"\201\20\2R\312\\\302\16\303p\340\t"
 #"w\243\30\230)\306\30\b!p\345\312\25\234<y2]\205\205a\210'O\236"
 #"\340\323\247O\271\3763338x\360`\232\27\2141\30\37\37/\314\23\ts"
 #"ss\370\372\365kjB\20\4\230\234"
 #"\234\304\324\324\24\202\216g\341e(\245"
 #"0>>\216\273w\357\246\211^J\211\367\357\337cvv6\327w\317\236=\270"
 #"t\351\228\347\351\252k\347\316\235\20B\f,\237\0\0036\205s\216\v\27."
 #"\244\313\313dE\366\366\355\333\234)D\2043g\316`ff&g\202R\252\322"
 #"E\235\237\237\307\374\374|\256mtt\24\323\323"
 #"\323=\233\22\4\1\366\355\333\207\361\361\361\264MJ"
) 500
(
 #"\211\331\331Y<{\366,w\261w\357\336\215\2337o\346VZZk\264Z-"
 #";MIh\265Z\351\277\23S\272=\247H\fh6\233\203\16\241g:\247\276"
 #"$\356N\264\326h6\233\b\303p\240&t\342\22\275\205l\312D\337\r!\4"
 #"<\317K\177\227R\366\374\4\326\0266e\324'N\234\300\304\304D.\177\4A"
 #"\200\333\267o\247\277\v!\260\260\260\260"
 #"\21\341}3\233\322\224\311\311I\334\272"
 #"u+\315_\236\347\341\316\235;\270w\357\336\6G6\0306\245)A\20@)"
 #"\5\337\367sm\277\27\\\242\267\20g"
 #"\212\205l\312\351\253\2230\fq\370\360"
 #"a\334\270q#]qq\316\361\356\335\2735O27\3\277\vS\222\227YN"
 #"\237>\235\266\325j5\334\277\177\337\231"
 #"\262\221t>+g\214m\332\344\357r\212\2058S,\344\273O_\2141\234:"
 #"u\n\333\267oO\337g'\"\214\215\215\225N/ZkLLL@)\225{"
 #"\217~\377\376\375\245\357\235$\375._"
 #"\276\234{\217~bb\242\264\350\"\b"
 #"\2\214\215\215\341\332\265k\351\v\217J"
 #")\348p\240\357\2\213^\240\245\245"
 #"\245\357\367rgL\267\n\227\252\257\264\376\210j\226n\20QjfB\277\225+"
 #"D\4\337\367\261\270\270X\351\334?$"
 #"\321\177\313;\202U/\342\240\2175\306"
 #"l\330B\301\345\24\v\21\360j\225:"
 #"\272Z\342\344\177\272\237\242\bCQ\205:y5\240J-\261\374\307\337K${"
 #"\257\272\3676\250\352\276iq\325}\350"
 #"\267\320\252Xu/\206\376\372\227\222\360\bZk\374\266\264\4?\br\237u_"
 #"\3372\n%\4(\336\237\302\0\214r\302P\205Iq\251\276\214e\337\317\rf"
 #"yx\4\276\227\371\246!\3\354\344\204?\224}p>\b\253++\250"
 #"\257\254\344\364\232\265a4\206\266\244"
 #"z\321\27\20\20\376XA\257\341\373"
) 270
(
 #"\250\327\353\271V%=\324\207G\322\375"
 #")\321\27\20\20\376\304\243m*Ez\201RX\371\317oPZG\17Dc\20"
 #"2\216\345-#\320\304rq\vP\205+\310X|?g\276\26\"\376\362\201\350"
 #"\367\310{\2\342\266r\3115z\0\210"
 #"\21\220\275\363\250\177=\212?\367\236("
 #"\215\fi\220e\345\251D\321\2303+\267D\257\335Fm\275bG\342\270\362z"
 #" \212\307KkV\246\3H\364\375\25s\17T\256\343{X\372\326)<\307\200"
 #"\365\n\204\335\352\313B\234)\26\342L"
 #"\261\20g\212\2058S,\304\231b!\316\24\vq\246X\2103\305B\234)\26"
 #"\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246X\2103\305B\234"
 #")\26\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246X\2103\305"
 #"B\234)\26\342L\261\20g\212\2058S,\304\231b!\316\24\vq\246"
 #"X\310\377\1\216\354\272\317\243\231\277)\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"EARTH-IMG"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 14 3 5 #"X-POS"
0 0 24 3 1 #" "
0 0 14 3 5 #"Y-POS"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 2          17 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\5_IDATx\234\355\235Qz\244*\20"
 #"\205O\201v\317R\356*g3\263\312\264B\335\a5\211\266J)\210\245\315\377"
 #"\320\311\227\264\240\34\240\240\n\201\376\375"
 #"\375\217QP\2059\373\6\n\357\24Q\24RDQHu\366\r\234\1\v\255("
 #"\3219y|\234(\255c\274\32\217\265"
 #"\362f\0\225%<\352}\35\211\367\214"
 #"\257\206W\225a\0\206\b\317\207y\23\346\343D\341\276\254\326*23\340#;"
 #"v\357\327\233\n\377\372\234Rl\312\fDXmI\2424\4\377_\372\316G\211"
 #"\262V\20\232\20w_\251\215#\177\177"
 #"\244Io1\237\337y\220(\313\323\21"
 #"\211\302\f\274\32\337\365\223\201Rz\326"
 #"\4c\302%\3314\36\316\205\323\253+Be\367)\323:F\323\370Q\36,\255"
 #"]'\"n)\3363\234\a\210B\6LV\200\236!K\217\3677\25f\3001"
 #"@\27\20\3427r\233B\24\335\225\214"
 #"\222C|\327$\315\347j\234j\350\265"
 #"\326\337\263\357\353\324y\312t4\224\253"
 #"0R\267\236\311X\"\3729N\23\245\256\r\352j|\373\257\226;\343\177 \225"
 #"%\324\225@\26a\337\352=\343\325\360"
 #"\233\0201Oq\232(f\306\250P\206\266B\4X\223.'\6\340\2\263\367\255"
 #"|\324\344q\340l\233\21\342#E\321NRQ\242\207\2703\327_aH\273\373"
 #"\271\27.\24\331\24\242n\246.\231\30"
 #"\232\be\352\312\240\262\343\316%&\275"
 #"\312\22\214\31\327;J<9\32\334\357"
 #"\277\361\276\363\200\214\363\5\236\265\31\325"
 #"\262\245\271\232\330\320K\\'\261\314\31"
 #"\377\30\210\0{\360\fu\232\a\21\340\372\352;\32*\23\301Z\22\r"
 #"\231\213MI\314\232G'\24\307\31(\242\34D\314\b\257\210r\0201\275"
) 500
(
 #"\346\307\205\203s@\203\361\237\370_\244B\25Q\16 v\200Q\272/\205\24Q"
 #"\24RDQ\310mlJ\353\30\255\373\3619\f\v\352\366\306\367\317\3446\242x"
 #"\317h[\376\36\3410\367\36\202\v\212"
 #"r\233\356\213&k\br\304\377\217\3426\242\\l\301\312*\267\21E\177\350J"
 #"N\26\233\322\264\34\\\360\274DU\21"
 #"\254\300C\335\271\351\307\337\313\340\330>"
 #"\204,\242\270ad\264\261\220\30]\310"
 #"\300\n\332\2631t\233f\237\34796\370}&\227}$w\251\\\267\242\210\242"
 #"\220\"\212B\212(\n)\242(\244\210"
 #"\242\220\"\212BTy\211\347f\345\222"
 #"\211\343\22\316\313V\361\e\243\313\305\257"
 #"J\24\333\277\246\220\312\271\330\255T\\"
 #"\367$0\3u\5U\242\250\353\276R{{C\236\4\215.~u\242\24r\211"
 #"\262\276M\311!|G \3\337\323\30"
 #"\207\311bS\252\212`\314\362\212\367n"
 #"\243\3\216r\265\17F}\232\3073\260\351\r3\213B\39\311#\212%A\254"
 #"<\256`\234\343\336\250\367[\3210\360"
 #"\250\t\317\332\4Z\213.A\200\e\331"
 #"\224\245\30\275\302\336)\310mD\271\23"
 #"\267\20E\343\2606\206(\233\322:\26\215^*\233v\v\21\347\31\336O\376v"
 #"\360\373\367K0w\345\20\202H>A\335-\n\243[\20\341|\370MHC\6"
 #"6\341\214\371\307\250'Kr7\236\371"
 #"\355\375\306)\214n\234c\215\25\335st\367uV\271h\20D\n\1\233n\370"
 #"\0266\345n\\V\224\220-\3238S\227\242\312K,\305\32B]\257w\235\334"
 #"\177\357\212\\S\24KI\a\16\332\270l\367ug\212(\n\211\26\345\312\0065"
 #"\27\314\330TP\273m\n\241\217\251\247"
 #"\333d\356\222\20\21\252*\274\3411\345z\217\276\333\366\357\306%.\300"
 #"P8f\2639\315\244\251\25\222PDQH\21E!\227\234<\246\206Y"
) 432
(
 #"\266c\352\260S\353\321\24Q\320\t\362"
 #"\365Zw\277\3\275'\341\221a\207\300"
 #"\303s(l\246\210\242\220\217\27E\343"
 #"\304VlS\234\347\267\235\336L\304\361"
 #"\35\336\313\342\373\306\244\215\3573O\16"
 #"1\243\360\241f\271\331p\322\320x\203"
 #"\2\"\340\317\303\354\336\347\267iY\264"
 #"\340\340Y\233\316\215\221\b\347\30_\201"
 #"\230\372\331\354\356\276r9\"Sg\243\253M\314\263[\24\205]\361m\bv_"
 #"\364\375Q\310\305\254(\336O\16i\341"
 #"k\234\372v\27\336Da\6\276\232\375"
 #"\273\16\25\342\231\267)\245U\234\312\307"
 #"O\03652+\212$\244\34\333\226r"
 #"\344\2212\335.\316\236\372N\346\2315"
 #"\364V0\213^\372\267\237)\355\351\v=@\27F\225\254\335J\355\6\211q\277"
 #"\233\231*\314\08\302\376\316\235K\363"
 #"&\n\21\360|\204^I\353\277;\363\267W\177&\360px\313\220\336t\357\367"
 #"G\360\265\267\345<b\250\"\26\362\315"
 #"]\345{\267?\363\266{\35v\375\373"
 #"\363x\257\260\213\363\224\335\205\301\243\37"
 #"\253\315\376\264\25\373\211\323\343\3113o"
 #"\276pB1\364\n)\242(\244\204\203#!\b\17\221c\206t<PD\211d"
 #"0\326k\20\375\254\3\20\275#\232\350"
 #"\336>\32\311\260}\313\340\242\330\24\205"
 #"\34\"Jq\235-\300\343_\227\212)y\367E\324\315|G\315\265\304c\0\""
 #"\220!P_c\31\313G\360&\27\3451\263\2]\343\212\221\334\230~M\303\224"
 #"\250\263\203\245\24\1\226\221\226M1\364\n)\242(\244\210\242\220\377"
 #"\1\311\34\215\254\355\327]A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PLAYER"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"LENGTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"character-boy"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"SIDEBAR"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.6"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BACKG"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 5 #"SCALE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Constants for score text"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"SCORE-TEXT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"SCORE-TEXT-COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"SCORE-TEXT-SCALE"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Error message constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"INVALID-CELL-POSN"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Invalid posn in cell.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; DATA DEFINITIONS -----------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; A Posn is (make-posn Number Number) where"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; - first field is the x-coordinate in the game grid"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - second field is the y-coordinate in the game grid"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Interpretation: A 2d coordinate in the grid"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; Origin is in the top left corner (0,0)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Template for Posn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"posn-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"psn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"psn"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"psn"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-0-0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-1-1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-5-5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-5-4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-5-6"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-4-5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-6-5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"tnt"
0 0 24 3 2 #" ["
0 0 14 3 5 #"timer"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; A TNT is a (make-tnt Number) where"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; first field is the number of seconds before tnt explodes"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #"; Interpretation: A type of material that detonates after a certain "
 #"amount of time."
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Template for TNT"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"tnt-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"tnt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"tnt-timer"
0 0 24 3 1 #" "
0 0 14 3 3 #"tnt"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"TNT-1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"TNT-2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; A Material is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'grass"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'water"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - 'rock"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - 'wood"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - 'gold"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - TNT"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; Interpretation: A material that exists on a spot on the grid."
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-GOLD"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"MAT-TNT"
0 0 24 3 1 #" "
0 0 14 3 5 #"TNT-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Template for Material"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"material-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-GOLD"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"tnt-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"mat"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; A ListofMaterials (LoM) is one of"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; - (cons Material LoM)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; Interpretaiton: A list of materials"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"lom-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 13 #"material-temp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 8 #"lom-temp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOM-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOM-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOM-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"LOM-4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 1 #" "
0 0 14 3 7 #"MAT-TNT"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"LOM-SPAWNABLE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 17 3 42 #"; The size of the spawnable materials list"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; A PlaceableMaterial (PM) is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'grass"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'water"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - 'rock"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - 'wood"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; - \"tnt\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-GRASS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-WATER"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-ROCK"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-WOOD"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PM-TNT"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"tnt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Template for PM"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"pm-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-GRASS"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-WATER"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-ROCK"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-WOOD"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 6 #"PM-TNT"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; A PlaceableMaterialsList (PML) is one of"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; - (cons PM PML)"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #"; Interpretation: A list of PlaceableMaterials (PM) that can be plac"
 #"ed by the user"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"PML-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"PML-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-GRASS"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-WATER"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-ROCK"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-WOOD"
0 0 24 3 1 #" "
0 0 14 3 6 #"PM-TNT"
0 0 24 3 3 #")) "
0 0 17 3 24 #"; Player can place these"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Template for PML"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pml-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"pml"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pml"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pml"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 7 #"pm-temp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pml"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 8 #"pml-temp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"pml"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"pair"
0 0 24 3 2 #" ["
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 3 #"lom"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; A Pair is a (make-pair Posn [List-of Material])"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Interpretation: Posn represents the position of the pair in the gr"
 #"id. "
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #"; LoM is the list of materials at that position."
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pair-temp"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"posn-temp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pair-posn"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 8 #"lom-temp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pair-lom"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"LOM-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"LOM-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"LOM-4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"LOM-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 5 #"LOM-4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; A Grid is a [List-of Pair]"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Interpretation: A list of pairs that represents each spot on the g"
 #"rid. "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"GRID-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"GRID-2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-1"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-2"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-3"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"GRID-3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"PAIR-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; one tnt that is about to blow up"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"GRID-XS"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"GRID-SMALL"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; two tnts that are not next to each other at all and are about to b"
 #"low up."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"GRID-BIG"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; two tnts next to each other that blow up at different time."
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; and one other tnt in different location that is about to blow up. "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"GRID-BIG2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; two tnts next to each other that blow up at same time."
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; and one other tnt in different location that is about to blow up."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"GRID-BIG3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; An SExpr is one of: "
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; \342\200\223 Number"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; \342\200\224 String"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; \342\200\224 Symbol"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; \342\200\223 SL"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; An SL is a [List-of SExpr]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; A Direction is one of"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; - (make-posn 0 -1)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; - (make-posn 0 1)"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; - (make-posn -1 0)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; - (make-posn 1 0)"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Interpretation: A directional vector represented by a Posn"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"DIR-UP"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-DOWN"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-LEFT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"DIR-RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; Template for Direction"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"direction-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"posn=?"
0 0 24 3 1 #" "
0 0 14 3 6 #"DIR-UP"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"posn-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"posn=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-DOWN"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"posn-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"posn=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-LEFT"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"posn-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"posn=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"DIR-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"posn-temp"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ["
0 0 14 3 8 #"location"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 8 #"material"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; A Player is (make-player Posn Direction PM Number Natural) where"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; first field is the current location of the player"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; second field is direction the player is facing"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; third field is current material the player is holding"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; fourth field is current score of the player"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; fifth field is the server-assigned player ID"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; Interpretation: Represents the player that is controlled by the us"
 #"er."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-0-0"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-DOWN"
0 0 24 3 1 #" "
0 0 14 3 7 #"PM-WOOD"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-player"
0 0 24 3 1 #" "
0 0 14 3 8 #"POSN-1-1"
0 0 24 3 1 #" "
0 0 14 3 8 #"DIR-DOWN"
0 0 24 3 1 #" "
0 0 14 3 6 #"PM-TNT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Template for Player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 1 #"("
0 0 14 3 9 #"posn-temp"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"direction-temp"
0 0 24 3 2 #" ("
0 0 14 3 16 #"player-direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"pm-temp"
0 0 24 3 2 #" ("
0 0 14 3 15 #"player-material"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"player-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"player-id"
0 0 24 3 1 #" "
0 0 14 3 2 #"pl"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #" ["
0 0 14 3 7 #"players"
0 0 24 3 1 #" "
0 0 14 3 4 #"grid"
0 0 24 3 1 #" "
0 0 14 3 2 #"tp"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; A GameState (GS) is a (make-gs [List-of Player] Grid Posn Number) "
 #"where"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #"; first field is a list of all the players in the game"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; second field is the playable grid"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; third field is the tile location"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #"; fourth field is the number of seconds that have elapsed since the "
 #"beginning of the game"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#"; Interpretation: The current state of the \"minicraft\" game"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"GS-1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-gs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-1"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-2"
0 0 24 3 2 #") "
0 0 14 3 6 #"GRID-2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"GS-2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-gs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-1"
0 0 24 3 1 #" "
0 0 14 3 8 #"PLAYER-2"
0 0 24 3 2 #") "
0 0 14 3 6 #"GRID-3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Template for GS"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-temp"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"player-temp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"gs-players"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 9 #"grid-temp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-grid"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-tp"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; --------- START OF FUNCTIONS --------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; main : Natural -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #"; Takes the grid's square-size and returns the player's score at the"
 #" end of the game"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 11 #"square-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"get-gs-score"
0 0 24 3 2 #" ("
0 0 15 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-init-gs"
0 0 24 3 1 #" "
0 0 14 3 11 #"square-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 11 #"render-game"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"on-key-action"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 7 #"ticking"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 10 #"on-receive"
0 0 24 3 1 #" "
0 0 14 3 7 #"receive"
0 0 24 3 5 #"]))) "
0 0 17 3 21 #"; tick every 1 second"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; receive : GS SExpr -> GS | Package"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Receives data from the server and changes the game and/or responds"
 #" accordingly"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #"; ------- FOR WRITING THIS IN THE FUTURE --------"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; Figure out what type of message was received, validate that the me"
 #"ssage is in appropriate format"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; Change the world state based on the data received and respond if n"
 #"ecessary"
) 0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; Our plan is to, once validated, convert the given data to our exis"
 #"ting data definitions, letting"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #"; us reuse most of our existing code with a few changes made to deal"
 #" with multiple players"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"receive"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVALID-GRID"
0 0 24 3 1 #" "
0 0 19 3 53 #"\"The S-expression representing the grid was invalid.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; sexpr->grid : SExpr -> Grid"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #"; Converts between the server's S-expression-based grid, and the cli"
 #"ent's grid representation."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sexpr->grid"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 10 #"sexp->pair"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVALID-GRID"
0 0 24 3 5 #")))  "
0 0 17 3 25 #"; Should never be reached"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sexpr->grid"
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 6 #")) ())"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 7 #") () (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 4 #") (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"water"
0 0 24 3 7 #") ())))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sexpr->grid"
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 7 #") () (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"down"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sexpr->grid"
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 10 #") () ())))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; sexp->pair : SExpr -> Pair"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Parses a SExpr representing a cell into a pair"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->pair"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"sexp->lom"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->pair"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 7 #")) ()))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->pair"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 4 #") (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-pair"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; sexp->posn : SExpr -> Posn"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Parses an SExpr representing a Posn into a Posn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sexp->posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; sexp->lom : SExpr -> [List-of Material]"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; Parses an SExpr into a list of materials"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sexp->lom"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 1 #"s"
0 0 24 3 3 #")) "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sexp->lom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sexp->lom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"sexp->lom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"GRID-NOT-CONS"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"E"
0 0 19 3 1 #"x"
0 0 19 3 6 #"pected"
0 0 19 3 1 #" "
0 0 19 3 4 #"grid"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 51 #" a list of cells, received empty list or non list.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"WRONG-LENGTH-CELL"
0 0 24 3 1 #" "
0 0 19 3 67
(
 #"\"Expected cell to be list of leng"
 #"th 3, received wrong length list.\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"CELL-NOT-LIST"
0 0 24 3 1 #" "
0 0 19 3 62
#"\"Expected cell to be a list, received different kind of data.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; valid-grid? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; Checks if the S-expression version of the grid is valid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 13 #"GRID-NOT-CONS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 6 #")) ())"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 7 #") () (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 4 #") (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"water"
0 0 24 3 7 #") ())))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 7 #") () (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"down"
0 0 24 3 3 #") ("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 8 #") () ())"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                             (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 10 #") () ())))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-grid?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"fake"
0 0 24 3 2 #") "
0 0 14 3 13 #"GRID-NOT-CONS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; valid-cell? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Checks if the S-expression is a valid cell."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 13 #"CELL-NOT-LIST"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 17 #"WRONG-LENGTH-CELL"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 20 #"valid-players-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"#t"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 10 #") () ())) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 4 #") (("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 14 3 17 #"WRONG-LENGTH-CELL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"valid-cell?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"hello"
0 0 24 3 2 #") "
0 0 14 3 13 #"CELL-NOT-LIST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"WRONG-LENGTH-POSN"
0 0 24 3 1 #" "
0 0 19 3 65
#"\"Expected posn S-expression to be of length 2, was wrong length.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"POSN-NOT-CONS"
0 0 24 3 1 #" "
0 0 19 3 67
(
 #"\"Expected posn S-expression to be"
 #" a cons, received something else.\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"POSN-OUT-OF-BOUNDS"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"Given posn was out of bounds.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; valid-posn-sexpr? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Checks if the S-expression is a valid posn"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 13 #"POSN-NOT-CONS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 17 #"WRONG-LENGTH-POSN"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 18 #"POSN-OUT-OF-BOUNDS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 17 #"WRONG-LENGTH-POSN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"test"
0 0 24 3 2 #") "
0 0 14 3 13 #"POSN-NOT-CONS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-posn-sexpr?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 18 #"POSN-OUT-OF-BOUNDS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"MATERIALS-NOT-LIST"
0 0 24 3 1 #" "
0 0 19 3 62
#"\"Expected materials to be in a list, received something else.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; valid-materials-list? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; Checks if the S-expression is a valid list of materials"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 18 #"MATERIALS-NOT-LIST"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"gold"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"grass"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"rock"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 22 #"valid-materials-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"test"
0 0 24 3 2 #") "
0 0 14 3 18 #"MATERIALS-NOT-LIST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"MATERIAL-NOT-VALID"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"Given an invalid material.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"TNT-NOT-CONS"
0 0 24 3 1 #" "
0 0 19 3 53 #"\"Expected TNT to be a cons, received something else.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"TNT-WRONG-LENGTH"
0 0 24 3 1 #" "
0 0 19 3 64
#"\"Expected TNT to be of length 2, received list of wrong length.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"TNT-WRONG-SYMBOL"
0 0 24 3 1 #" "
0 0 19 3 57
#"\"Expected TNT list to have symbol 'tnt as first element.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"TNT-INVALID-TIMER"
0 0 24 3 1 #" "
0 0 19 3 51 #"\"Expected TNT timer to be a natural. IT WASN'T....\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; valid-material? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Checks if the material in the SExpr is valid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 31 #"; valid-tnt? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 43 #"; Checks if the S-expression is a valid TNT"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"valid-tnt?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 12 #"TNT-NOT-CONS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 16 #"TNT-WRONG-LENGTH"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"tnt"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 16 #"TNT-WRONG-SYMBOL"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 17 #"TNT-INVALID-TIMER"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 4 #"]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-GRASS"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-WOOD"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-GOLD"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 18 #"MATERIAL-NOT-VALID"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"valid-tnt?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gold"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"wood"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"water"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 15 #"valid-material?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"asdf"
0 0 24 3 2 #") "
0 0 14 3 18 #"MATERIAL-NOT-VALID"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"INVALID-MATERIAL-ORDER"
0 0 24 3 1 #" "
0 0 19 3 51 #"\"The materials in a cell were in an invalid order.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; valid-order? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Checks if the materials are in a valid order"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 14 3 9 #"MAT-WATER"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAT-ROCK"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 22 #"INVALID-MATERIAL-ORDER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 5 #"#true"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 5 #"water"
0 0 24 3 1 #" "
0 0 14 3 5 #"grass"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 14 3 4 #"rock"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"grass"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"grass"
0 0 24 3 1 #" "
0 0 14 3 5 #"water"
0 0 24 3 3 #")) "
0 0 14 3 22 #"INVALID-MATERIAL-ORDER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 12 #"valid-order?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"grass"
0 0 24 3 1 #" "
0 0 14 3 4 #"rock"
0 0 24 3 3 #")) "
0 0 14 3 22 #"INVALID-MATERIAL-ORDER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; material-type=? : SExpr SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; Checks if two S-expression material types are equal"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"grass"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"rock"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"material-type=?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"tnt"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"PLAYERS-NOT-LIST"
0 0 24 3 1 #" "
0 0 19 3 60
#"\"List of players should be a list, received something else.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"PLAYERS-CATCH-ALL"
0 0 24 3 1 #" "
0 0 19 3 61
#"\"Unknown error occured while checking if players were valid.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; valid-players-sexpr? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; Checks if the list of players is valid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"valid-players-sexpr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 16 #"PLAYERS-NOT-LIST"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 17 #"PLAYERS-CATCH-ALL"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"valid-players-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 20 #"valid-players-sexpr?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"test"
0 0 24 3 2 #") "
0 0 14 3 16 #"PLAYERS-NOT-LIST"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"PLAYER-NOT-CONS"
0 0 24 3 1 #" "
0 0 19 3 56
#"\"Expected player to be a cons, received something else.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"PLAYER-WRONG-LENGTH"
0 0 24 3 1 #" "
0 0 19 3 64
#"\"Expected player to have 2 elements, recieved different length.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"PLAYER-INVALID-ID"
0 0 24 3 1 #" "
0 0 19 3 66
#"\"Expected player's ID to be a natural number, was something else.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 24 #"PLAYER-INVALID-DIRECTION"
0 0 24 3 1 #" "
0 0 19 3 59
#"\"Expected player's direction to be 'up/'down/'left/'right.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; valid-player? : SExpr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Checks if the player S-expression is valid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 15 #"PLAYER-NOT-CONS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 19 #"PLAYER-WRONG-LENGTH"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"integer?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 17 #"PLAYER-INVALID-ID"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 7 #"member?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #") "
0 0 14 3 15 #"SYMBOL-DIR-LIST"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 14 3 24 #"PLAYER-INVALID-DIRECTION"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 15 #"PLAYER-NOT-CONS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 19 #"PLAYER-WRONG-LENGTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 3 #"3.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 3 #")) "
0 0 14 3 17 #"PLAYER-INVALID-ID"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 13 #"valid-player?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"asdf"
0 0 24 3 3 #")) "
0 0 14 3 24 #"PLAYER-INVALID-DIRECTION"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; make-init-gs : Natural -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"; Initializes a GS with a grid of size (sqr sq-size)"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"; And a random PM on each space of the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"make-init-gs"
0 0 17 3 1 #" "
0 0 17 3 7 #"sq-size"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"make-gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 2 #" ("
0 0 17 3 3 #"sqr"
0 0 17 3 1 #" "
0 0 17 3 7 #"sq-size"
0 0 17 3 2 #") "
0 0 17 3 7 #"sq-size"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-random"
0 0 17 3 2 #" ("
0 0 17 3 12 #"make-init-gs"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 7 #"make-gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; spawn-grid : Natural Natural -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 76
(
 #"; Creates a grid of given size with one of spawnable materials on ea"
 #"ch space"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"()]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 9 #"make-pair"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                          ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                          ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 6 #"length"
0 0 17 3 5 #"))]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-random"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-grid"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 18 #"LOM-SPAWNABLE-SIZE"
0 0 17 3 6 #"))))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"; create-posn-for-pair : Natural Natural -> Posn"
0 0 17 29 1 #"\n"
0 0 17 3 97
(
 #"; Creates a Posn representing a spot in the grid from the number of "
 #"spots remaining to be created"
) 0 0 17 29 1 #"\n"
0 0 17 3 45 #"; in the grid and the side length of the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-posn"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 2 #" ("
0 0 17 3 6 #"modulo"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 5 #"))) ("
0 0 17 3 4 #"sub1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"ceiling"
0 0 17 3 2 #" ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 12 #"current-size"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"create-posn-for-pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"; get-rand-spawnable-mat : Number -> Material"
0 0 17 29 1 #"\n"
0 0 17 3 99
(
 #"; Takes a random number [0,2] and returns the respective material fr"
 #"om the spawnable materials list"
) 0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #"; The spawnable materials list is defined as the constant: LOM-SPAWN"
 #"ABLE"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"rand-num"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 8 #"rand-num"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 8 #"rand-num"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 8 #"rand-num"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 5 #"third"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 4 #")]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"get-rand-spawnable-mat"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 5 #"third"
0 0 17 3 1 #" "
0 0 17 3 13 #"LOM-SPAWNABLE"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"; ticking : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; Updates the game state every second:"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; Each placed tnt counts down every second"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"; Gold is spawned once every GOLD-SPAWN-RATE seconds"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 7 #"ticking"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"modulo"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #") "
0 0 17 3 15 #"GOLD-SPAWN-RATE"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"spawn-gold"
0 0 17 3 2 #" ("
0 0 17 3 11 #"update-tnts"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 11 #"update-tnts"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 7 #"ticking"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"6"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"7"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 7 #"ticking"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 1 #"2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 7 #"ticking"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"; update-tnts : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"; Updates all tnts in the given GS by decreasing all the tnt countdo"
 #"wn's by 1 and"
) 0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"; exploding if countdown is 0, and updates the game state's time by "
 #"1. "
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"update-tnts"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 15 #"update-tnt-grid"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #")) ("
0 0 17 3 4 #"add1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"update-tnts"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"update-tnts"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 1 #"2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"; update-tnt-grid : Grid -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 81
(
 #"; Updates all tnts in the given GS by decreasing all the tnt countdo"
 #"wn's by 1 and"
) 0 0 17 29 1 #"\n"
0 0 17 3 29 #"; exploding if countdown is 0"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"update-tnt-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 35 #"; update-tnt-at-pair : Pair -> Pair"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 35 #"; Updates the TNT in the given pair"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"update-tnt-at-pair"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 17 #"update-tnt-at-lom"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 32 #"; update-tnt-at-lom : LoM -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 34 #"; Updates the TNT in the given LoM"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"update-tnt-at-lom"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tnt?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 10 #"update-tnt"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 2 #") "
0 0 17 3 3 #"mat"
0 0 17 3 3 #")) "
0 0 17 3 3 #"lom"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 25 #"; update-tnt : TNT -> TNT"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 45 #"; Subtracts 1 from the timer in the given TNT"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"update-tnt"
0 0 17 3 1 #" "
0 0 17 3 3 #"tnt"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 2 #" ("
0 0 17 3 9 #"tnt-timer"
0 0 17 3 1 #" "
0 0 17 3 3 #"tnt"
0 0 17 3 5 #"))))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 2 #" ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 13 #"pair-has-tnt?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 18 #"update-tnt-at-pair"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")) "
0 0 17 3 4 #"grid"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"update-tnt-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"29"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"update-tnt-grid"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"; try-detonate : Grid -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"; Gets all the spots where TNT is about to blow, and detonates them."
 #" "
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 36 #"; pair-has-tnt-at-0? Pair -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 65
#"; Determines if a pair has a tnt with a 0 in its timer in its lom"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"pair-has-tnt-at-0?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 5 #"ormap"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 4 #"tnt?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 9 #"tnt-timer"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 5 #"))) ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 4 #")))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 8 #"detonate"
0 0 17 3 2 #" ("
0 0 17 3 5 #"foldr"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 3 #") ("
0 0 17 3 6 #"append"
0 0 17 3 2 #" ("
0 0 17 3 13 #"get-neighbors"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 1 #"l"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                     "
0 0 17 3 1 #"'"
0 0 17 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 6 #"filter"
0 0 17 3 1 #" "
0 0 17 3 18 #"pair-has-tnt-at-0?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 3 #")) "
0 0 17 3 4 #"grid"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 1 #" "
0 0 17 3 8 #"GRID-BIG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 1 #" "
0 0 17 3 10 #"GRID-SMALL"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 1 #" "
0 0 17 3 9 #"GRID-BIG2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"try-detonate"
0 0 17 3 1 #" "
0 0 17 3 9 #"GRID-BIG3"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; detonate : [List-of Posn] Grid -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 58
#"; Given a list of posns representing the spots to blow up,"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"; returns a new grid with those spots converted to bare earth. "
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"detonate"
0 0 17 3 1 #" "
0 0 17 3 3 #"lop"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 39 #"; contains-posn/pair? : Pair -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 49 #"; Determines if a given pair's posn exists in lop"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"contains-posn/pair?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 5 #"ormap"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 3 #"psn"
0 0 17 3 3 #") ("
0 0 17 3 6 #"posn=?"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 3 #")) "
0 0 17 3 3 #"lop"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 31 #"; make-pair-bare : Pair -> Pair"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 48 #"; Given a pair, remove all elements from its lom"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"make-pair-bare"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"()))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 19 #"contains-posn/pair?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                       ("
0 0 17 3 14 #"make-pair-bare"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                       "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")) "
0 0 17 3 4 #"grid"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 8 #"detonate"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #")) "
0 0 17 3 10 #"GRID-SMALL"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"; pair-has-tnt? : Pair -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; Does the pair contain a TNT?"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"pair-has-tnt?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"ormap"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 4 #"tnt?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 4 #")) ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"pair-has-tnt?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-4"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"pair-has-tnt?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-3"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"; spawn-gold : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 83
(
 #"; Spawns gold at a random location in the grid that has at least one"
 #" material on it"
) 0 0 17 29 1 #"\n"
0 0 17 3 60
#"; Gold is placed below existing materials on the chosen spot"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-gold"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 19 #"gold-spawn-location"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #")) ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"spawn-gold"
0 0 17 3 2 #" ("
0 0 17 3 7 #"make-gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"; gold-spawn-location : Grid -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; Spawns the gold on the given grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"gold-spawn-location"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    (("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 8 #"randposn"
0 0 17 3 2 #" ("
0 0 17 3 11 #"random-posn"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sqrt"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 8 #"randpair"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"randposn"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 14 #"eligible-pair?"
0 0 17 3 1 #" "
0 0 17 3 8 #"randpair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 18 #"spawn-gold-on-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"randpair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 17 3 4 #"grid"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"gold-spawn-location"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; spawn-gold-on-grid : Grid Pair -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; Spawns the gold at the given pair"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-on-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 1 #"p"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"pair=?"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 18 #"spawn-gold-at-pair"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 2 #") "
0 0 17 3 1 #"p"
0 0 17 3 3 #")) "
0 0 17 3 4 #"grid"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-on-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 2 #") "
0 0 17 3 5 #"empty"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-on-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-on-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-3"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; spawn-gold-at-pair : Pair -> Pair"
0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"; Spawns gold at the given pair, the given pair is assumed to be a v"
 #"alid Pair"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-at-pair"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 17 #"spawn-gold-at-lom"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-at-pair"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"spawn-gold-at-pair"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-3"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 3 32 #"; spawn-gold-at-lom : LoM -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 86
(
 #"; Adds gold to the bottom of the given LoM, the given LoM is assumed"
 #" to be a valid LoM"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"spawn-gold-at-lom"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"foldr"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 4 #")) ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 3 #"lom"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"spawn-gold-at-lom"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-2"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"spawn-gold-at-lom"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; pair=? : Pair Pair -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; Checks if two pairs are equal"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"pair=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"p1"
0 0 17 3 1 #" "
0 0 17 3 2 #"p2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"posn=?"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"p1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"p2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"pair=?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"pair=?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; random-posn : Number -> Posn"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"; Generates a random posn given the size of the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"random-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"size"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-posn"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 4 #"size"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 4 #"size"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-random"
0 0 17 3 2 #" ("
0 0 17 3 11 #"random-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 2 #" ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 3 #") ("
0 0 17 3 6 #"random"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"random-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"; eligible-pair? : Pair -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; Is the pair a valid place to spawn gold."
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"eligible-pair?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 13 #"eligible-lom?"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"eligible-pair?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-0"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"eligible-pair?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"; eligible-lom? : LoM -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 64
#"; Determines whether or not gold can be spawned in the given lom"
0 0 17 29 1 #"\n"
0 0 17 3 60
#"; If the lom has at least one material, it is valid for gold"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"eligible-lom?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"eligible-lom?"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"eligible-lom?"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-2"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"; render-game : GS -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"; Renders a gs, placing the sidebar beside the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"render-game"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"beside"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 16 #"render-main-game"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"render-game"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"beside"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #") ("
0 0 17 3 16 #"render-main-game"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"render-game"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 3 #") ("
0 0 17 3 6 #"beside"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 3 #") ("
0 0 17 3 16 #"render-main-game"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"; render-main-game : GS -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"; Given a gs, renders the playable area"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"render-main-game"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 3 6 #"PLAYER"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 11 #"render-grid"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"render-main-game"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #") ("
0 0 17 3 11 #"place-image"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"                                       "
0 0 17 3 6 #"PLAYER"
0 0 17 3 2 #" ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"                                       ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"                                       ("
0 0 17 3 11 #"render-grid"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; place-posn-in-grid : Posn [Posn -> Number] -> Number"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"; Converts a given posn from grid coordinates to pixels"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"; posn-op determines whether the x-coord or y-coord is returned"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 1 #" "
0 0 17 3 7 #"posn-op"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 2 #" ("
0 0 17 3 7 #"posn-op"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-1-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-y"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-1-1"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 5 #"SCALE"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 58
#"; place-player-in-grid : Player [Posn -> Number] -> Number"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"; Returning a coordinate to place a player in pixels"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"; posn-op determines whether the x-coord or y-coord is returned"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 1 #" "
0 0 17 3 7 #"posn-op"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #") "
0 0 17 3 7 #"posn-op"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"; Test cases for place-player-in-grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-x"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 20 #"place-player-in-grid"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-y"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; place-pair-in-grid : Pair [Posn -> Number] -> Number"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"; Returning a coordinate to place a pair in pixels"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"; posn-op determines whether the x-coord or y-coord is returned"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 7 #"posn-op"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 7 #"posn-op"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; Test cases for place-pair-in-grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 3 #") ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-x"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-y"
0 0 17 3 3 #") ("
0 0 17 3 18 #"place-posn-in-grid"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 2 #") "
0 0 17 3 6 #"posn-y"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"; render-grid : Grid -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"; Given a grid, renders the grid onto an image"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"render-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"foldr"
0 0 17 3 1 #" "
0 0 17 3 23 #"render-material-at-posn"
0 0 17 3 1 #" "
0 0 17 3 5 #"BACKG"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"render-grid"
0 0 17 3 1 #" "
0 0 17 3 7 #"GRID-XS"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 23 #"render-material-at-posn"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 3 #")) "
0 0 17 3 5 #"BACKG"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"; render-material-at-posn : Pair Image -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 67
#"; Renders the top material from the given pair onto the given image"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-material-at-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 3 #"img"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"place-image"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 19 #"render-top-material"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"   "
0 0 17 3 3 #"img"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-material-at-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-0"
0 0 17 3 1 #" "
0 0 17 3 5 #"BACKG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"place-image"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 9 #"EARTH-IMG"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-0"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-0"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 5 #"BACKG"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-material-at-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #" "
0 0 17 3 5 #"BACKG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"place-image"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 18 #"place-pair-in-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-2"
0 0 17 3 1 #" "
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 5 #"BACKG"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"; render-top-material : LoM -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 64
#"; Given a LoM, renders the top material in the LoM onto an image"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-top-material"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 9 #"EARTH-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 3 #") ("
0 0 17 3 15 #"render-material"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 5 #"))]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-1"
0 0 17 3 2 #") "
0 0 17 3 9 #"EARTH-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-2"
0 0 17 3 2 #") "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 2 #") "
0 0 17 3 8 #"ROCK-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; render-materials-side-bar : LoM -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"; Given a LoM, renders the rest of the materials in the left side ba"
 #"r."
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 11 #"empty-image"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 3 #") ("
0 0 17 3 5 #"above"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 4 #")) ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 6 #")))]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"()) "
0 0 17 3 11 #"empty-image"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 3 #") ("
0 0 17 3 5 #"above"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"                                                 ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"                                                 ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"                                                 ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"                                                 "
0 0 17 3 11 #"empty-image"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"; render-material : Material -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; Given a Material, renders the material onto an image"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 7 #"symbol?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                     [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                     [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"WATER-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                     [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"ROCK-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                     [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"WOOD-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                     [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 8 #"GOLD-IMG"
0 0 17 3 3 #"])]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 4 #"tnt?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 3 #") ("
0 0 17 3 10 #"render-tnt"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 4 #")]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"WATER-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"ROCK-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"WOOD-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 8 #"GOLD-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"render-material"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #") ("
0 0 17 3 10 #"render-tnt"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"; render-tnt : TNT -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"; Render a given tnt as an image with its timer overlayed"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"render-tnt"
0 0 17 3 1 #" "
0 0 17 3 3 #"tnt"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 9 #"textcolor"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"white\""
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 8 #"textsize"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 13 #"countdown-img"
0 0 17 3 2 #" ("
0 0 17 3 4 #"text"
0 0 17 3 2 #" ("
0 0 17 3 14 #"number->string"
0 0 17 3 2 #" ("
0 0 17 3 9 #"tnt-timer"
0 0 17 3 1 #" "
0 0 17 3 3 #"tnt"
0 0 17 3 3 #")) "
0 0 17 3 8 #"textsize"
0 0 17 3 1 #" "
0 0 17 3 9 #"textcolor"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 13 #"overlay/align"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"right\""
0 0 17 3 1 #" "
0 0 17 3 8 #"\"bottom\""
0 0 17 3 1 #" "
0 0 17 3 13 #"countdown-img"
0 0 17 3 1 #" "
0 0 17 3 7 #"TNT-IMG"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"render-tnt"
0 0 17 3 1 #" "
0 0 17 3 5 #"TNT-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 13 #"overlay/align"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"right\""
0 0 17 3 1 #" "
0 0 17 3 8 #"\"bottom\""
0 0 17 3 2 #" ("
0 0 17 3 4 #"text"
0 0 17 3 1 #" "
0 0 17 3 4 #"\"30\""
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"white\""
0 0 17 3 2 #") "
0 0 17 3 7 #"TNT-IMG"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"render-tnt"
0 0 17 3 1 #" "
0 0 17 3 5 #"TNT-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 13 #"overlay/align"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"right\""
0 0 17 3 1 #" "
0 0 17 3 8 #"\"bottom\""
0 0 17 3 2 #" ("
0 0 17 3 4 #"text"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"5\""
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"white\""
0 0 17 3 2 #") "
0 0 17 3 7 #"TNT-IMG"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; render-sidebar : GS -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"; Given the gs, renders it onto the left side bar."
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"overlay"
0 0 17 3 2 #" ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")) "
0 0 17 3 7 #"SIDEBAR"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #") ("
0 0 17 3 7 #"overlay"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"                                     ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"                                                            ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 3 #")) "
0 0 17 3 7 #"SIDEBAR"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"render-sidebar"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 3 #") ("
0 0 17 3 7 #"overlay"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"                                     ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"                                                            ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 3 #")) "
0 0 17 3 7 #"SIDEBAR"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"; render-sidebar-player : Grid Player -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 100
(
 #"; Renders player properties such as score, direction, material, and "
 #"materials below on the side bar."
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"above"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 2 #" ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"         ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 2 #" ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"         ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"         ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 3 #") ("
0 0 17 3 5 #"above"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 2 #" ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 2 #" ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"                                           ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" ("
0 0 17 3 21 #"render-sidebar-player"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-3"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 3 #") ("
0 0 17 3 5 #"above"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 2 #" ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 2 #" ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"                                          ("
0 0 17 3 25 #"render-materials-side-bar"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"                                           ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-3"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; render-player-material : PM -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"; Given the player's current placeable material, renders it. "
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"WATER-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"ROCK-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"WOOD-IMG"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #") "
0 0 17 3 7 #"TNT-IMG"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"GRASS-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"WATER-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"ROCK-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"WOOD-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"render-player-material"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #") "
0 0 17 3 7 #"TNT-IMG"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"; render-player-score : Number -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"; Given the player's score, renders it."
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"sc"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 32 #";; score->image: Number -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 47 #";; Render the player's score number as an image"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"score->image"
0 0 17 3 1 #" "
0 0 17 3 2 #"sc"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 4 #"text"
0 0 17 3 2 #" ("
0 0 17 3 14 #"number->string"
0 0 17 3 1 #" "
0 0 17 3 2 #"sc"
0 0 17 3 2 #") "
0 0 17 3 15 #"SCORE-TEXT-SIZE"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-COLOR"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"scale"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-SCALE"
0 0 17 3 2 #" ("
0 0 17 3 7 #"overlay"
0 0 17 3 2 #" ("
0 0 17 3 12 #"score->image"
0 0 17 3 1 #" "
0 0 17 3 2 #"sc"
0 0 17 3 2 #") "
0 0 17 3 10 #"gem-orange"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 5 #"scale"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-SCALE"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 7 #"overlay"
0 0 17 3 2 #" ("
0 0 17 3 4 #"text"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"0\""
0 0 17 3 1 #" "
0 0 17 3 15 #"SCORE-TEXT-SIZE"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-COLOR"
0 0 17 3 2 #") "
0 0 17 3 10 #"gem-orange"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"render-player-score"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 5 #"scale"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-SCALE"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 7 #"overlay"
0 0 17 3 2 #" ("
0 0 17 3 4 #"text"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"5\""
0 0 17 3 1 #" "
0 0 17 3 15 #"SCORE-TEXT-SIZE"
0 0 17 3 1 #" "
0 0 17 3 16 #"SCORE-TEXT-COLOR"
0 0 17 3 2 #") "
0 0 17 3 10 #"gem-orange"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"; render-player-direction : Direction -> Image"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"; Given the player's direction, renders it. "
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 2 #") "
0 0 17 3 8 #"UP-ARROW"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 2 #") "
0 0 17 3 10 #"DOWN-ARROW"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-LEFT"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 2 #") "
0 0 17 3 10 #"LEFT-ARROW"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 2 #") "
0 0 17 3 11 #"RIGHT-ARROW"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 2 #") "
0 0 17 3 8 #"UP-ARROW"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 2 #") "
0 0 17 3 10 #"DOWN-ARROW"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-LEFT"
0 0 17 3 2 #") "
0 0 17 3 10 #"LEFT-ARROW"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"render-player-direction"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 2 #") "
0 0 17 3 11 #"RIGHT-ARROW"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; on-key-action : GS KeyEvent -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 60
#"; Deals with moving, smashing, rotating, and placing actions"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 6 #"KEY-UP"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 8 #"KEY-DOWN"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 8 #"KEY-LEFT"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-LEFT"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 9 #"KEY-RIGHT"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 27 #"KEY-SMASH) (smash-material "
0 0 17 3 2 #"gs"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 9 #"KEY-PLACE"
0 0 17 3 3 #") ("
0 0 17 3 14 #"place-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"string=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"ke"
0 0 17 3 1 #" "
0 0 17 3 10 #"KEY-ROTATE"
0 0 17 3 3 #") ("
0 0 17 3 15 #"rotate-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"KEY-UP"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"KEY-DOWN"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"KEY-LEFT"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-LEFT"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"KEY-RIGHT"
0 0 17 3 3 #") ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"KEY-SMASH"
0 0 17 3 18 #") (smash-material "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"KEY-PLACE"
0 0 17 3 3 #") ("
0 0 17 3 14 #"place-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 10 #"KEY-ROTATE"
0 0 17 3 3 #") ("
0 0 17 3 15 #"rotate-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"on-key-action"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"q\""
0 0 17 3 2 #") "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; posn=? : Posn Posn -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"; Determines if two posns are equal"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #")) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn=?"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"; add-posn : Posn Posn -> Posn"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; Adds two posns using vector addition"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 9 #"make-posn"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn1"
0 0 17 3 3 #") ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"psn2"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 8 #"add-posn"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 4 #")) ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 8 #"add-posn"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 4 #")) ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"; move-player : GS Direction -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"; Moves the player in the given Direction"
0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"; by summing the player's location posn with the given direction pos"
 #"n"
) 0 0 17 29 1 #"\n"
0 0 17 3 63
#"; only if the new location is valid, else return the current GS"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 7 #"new-pos"
0 0 17 3 2 #" ("
0 0 17 3 8 #"add-posn"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 34 #"; update-player : Player -> Player"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 66
#"; Updates the player to a new location and changes their direction"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"update-player"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 11 #"make-player"
0 0 17 3 1 #" "
0 0 17 3 7 #"new-pos"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #") ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 10 #"new-player"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 11 #"valid-move?"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #") "
0 0 17 3 7 #"new-pos"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 13 #"update-player"
0 0 17 3 1 #" "
0 0 17 3 10 #"new-player"
0 0 17 3 3 #") ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 7 #"make-gs"
0 0 17 3 1 #" "
0 0 17 3 10 #"new-player"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 2 #") "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"move-player"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"; valid-move? : Grid Posn -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"; Checks if the location that the player wants to move is a valid lo"
 #"cation"
) 0 0 17 29 1 #"\n"
0 0 17 3 68
#"; A valid location is within the grid and does not have rock on top."
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"valid-move?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 3 #") ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"valid-move?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"valid-move?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"valid-move?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"; has-rock? : Grid Posn -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; Checks if the given posn has rock on top"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 32 #"; is-rock? : Material -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 45 #"; Returns whether or not a material is a rock"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"is-rock?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 7 #"symbol?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 2 #"])"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 17 3 6 #"#false"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 8 #"is-rock?"
0 0 17 3 2 #" ("
0 0 17 3 16 #"get-top-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"has-rock?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                         ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; valid-location? : Grid Posn -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"; Checks if the given posn is within the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 7 #"sq-size"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sqrt"
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 4 #")))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 2 #">="
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 2 #") "
0 0 17 3 7 #"sq-size"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 2 #">="
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 2 #" ("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 2 #") "
0 0 17 3 7 #"sq-size"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; change-player-direction : Player Direction -> Player"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"; Given a player and direction, updates the player's direction."
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #" "
0 0 17 3 3 #"dir"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 2 #") "
0 0 17 3 3 #"dir"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #") ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-DOWN"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"              "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #" "
0 0 17 3 6 #"DIR-UP"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #" "
0 0 17 3 8 #"DIR-LEFT"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 23 #"change-player-direction"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIR-RIGHT"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"; smash-material : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 80
(
 #"; Smashes the material that the player is facing (if facing valid gr"
 #"id location)"
) 0 0 17 29 1 #"\n"
0 0 17 3 48 #"; If a gold is smashed, the player gains a point"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"smash-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 12 #"valid-smash?"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 13 #") (gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"               (remove-top-material-grid (gs-grid "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 15 #"gs-players gs))"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 8 #"gs-time "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"smash-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"                             ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"                             ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"                             ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                       "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"smash-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 2 #") "
0 0 17 3 4 #"GS-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"; remove-top-material-grid : Grid Player -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"; Calls (remove-top-material (get-lom-from-posn psn)) which updates "
 #"an LoM,"
) 0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #"; then creates a new grid that updates the LoM for that specified sp"
 #"ot. "
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 24 #"remove-top-material-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 13 #"posn-to-smash"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 13 #"posn-to-smash"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 19 #"remove-top-material"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                       "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")) "
0 0 17 3 2 #"gr"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 24 #"remove-top-material-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"; remove-top-material : LoM -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 60
#"; Removes the first material in the given list of materials,"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"; returns the updated LoM"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"remove-top-material"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"()]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 3 #") ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 4 #")]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"remove-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"remove-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"remove-top-material"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; update-if-gold : Grid Player -> Player"
0 0 17 29 1 #"\n"
0 0 17 3 74
(
 #"; Adds one to the player's score if the material they are smashing i"
 #"s gold"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 29 #"; top-gold? : LoM -> Boolean?"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 29 #"; Is the top of the LoM gold?"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"top-gold?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"         [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"         [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 3 #") ("
0 0 17 3 9 #"mat-gold?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 5 #"))]))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 33 #"; mat-gold? : Material -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 23 #"; Is the material gold?"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"mat-gold?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 7 #"symbol?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"             [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 2 #"])"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"           "
0 0 17 3 6 #"#false"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 15 #"facing-location"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 15 #"facing-location"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"             ("
0 0 17 3 9 #"top-gold?"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 15 #"facing-location"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"        ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 4 #"add1"
0 0 17 3 2 #" ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"        "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 4 #"))) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"update-if-gold"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"gold"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 4 #"))) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"; valid-smash? : Grid Player -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 94
(
 #"; Checks if the smash is at a valid location and can be smashed (bar"
 #"e earth cannot be smashed)"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"valid-smash?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 10 #"smash-posn"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 10 #"smash-posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"         ("
0 0 17 3 13 #"is-not-earth?"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 10 #"smash-posn"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"valid-smash?"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"valid-smash?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"())) "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"; get-gs-score : GS -> Number"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; Grabs the player's score from a given GS"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"get-gs-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 6 #"player"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"get-gs-score"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"get-gs-score"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"; get-player-facing-location : Player -> Posn"
0 0 17 29 1 #"\n"
0 0 17 3 87
(
 #"; Takes the player's current location and find the location of the s"
 #"pot they are facing"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 8 #"add-posn"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #") ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"; is-not-earth? : LoM -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 64
#"; Determines whether or not a given LoM contains only bare earth"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"is-not-earth?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"is-not-earth?"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"is-not-earth?"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; get-top-material : Grid Posn -> Material"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; Returns the top material from a given Posn in a Grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"get-top-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"get-top-lom"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"get-top-material"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"get-top-material"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-3"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; get-lom-from-posn : Grid Posn -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"; Returns the LoM in a grid from a given Posn"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ["
0 0 17 3 32 #"; get-lom-from-pair: Pair -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 83
(
 #"; Returns the LoM in a pair (This exists solely to stay in line with"
 #" design recipe)"
) 0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-pair"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"       ("
0 0 17 3 8 #"pair-lom"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 17 #"get-lom-from-pair"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 4 #"posn"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-1-1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"                                                   "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"                                                   ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"                                                   "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"                                                   "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-3"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 2 #") "
0 0 17 3 5 #"LOM-3"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; get-pair-from-posn : Grid Posn -> Pair"
0 0 17 29 1 #"\n"
0 0 17 3 60
#"; Given a posn, finds the respective pair in the given grid."
0 0 17 29 1 #"\n"
0 0 17 3 54 #"; Throws an error if the posn is not found in the grid"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 3 #") ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 2 #"No"
0 0 17 3 1 #" "
0 0 17 3 16 #"pair was found!\""
0 0 17 3 3 #")] "
0 0 17 3 19 #"; Informative error"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 4 #"grid"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 5 #"))]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-0-0"
0 0 17 3 2 #") "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-1-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"PAIR-4"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 11 #"check-error"
0 0 17 3 2 #" ("
0 0 17 3 18 #"get-pair-from-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"POSN-5-5"
0 0 17 3 2 #") "
0 0 17 3 1 #"\""
0 0 17 3 2 #"No"
0 0 17 3 1 #" "
0 0 17 3 16 #"pair was found!\""
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"; pair-equals-posn? : Pair Posn -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"; Checks if the posn of a given pair is equal to a given posn"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 3 #"psn"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"posn=?"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 2 #") "
0 0 17 3 3 #"psn"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-1"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-4"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; get-top-lom : LoM -> Material"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"; Returns the top material of a given LoM"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"get-top-lom"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"()]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 5 #"cons?"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 3 #") ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 4 #")]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"get-top-lom"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-2"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 11 #"get-top-lom"
0 0 17 3 1 #" "
0 0 17 3 5 #"LOM-3"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; get-neighbors : Pair -> [List-of Posn]"
0 0 17 29 1 #"\n"
0 0 17 3 98
(
 #"; Returns a [List-of Posn] that contains the Posns adjacent (includi"
 #"ng diagonal) to the given Pair"
) 0 0 17 29 1 #"\n"
0 0 17 3 64
#"; The location of the given Posn is also an element of this list"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"get-neighbors"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"     "
0 0 17 3 6 #"center"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 8 #"add-posn"
0 0 17 3 1 #" "
0 0 17 3 6 #"center"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"get-neighbors"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"get-neighbors"
0 0 17 3 1 #" "
0 0 17 3 6 #"PAIR-4"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"; rotate-material : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"; Cycles through the list of placeable materials"
0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"; Updates the current placeable material held by the player in the G"
 #"S"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 15 #"rotate-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 22 #"update-player-material"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #")) ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 15 #"rotate-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 5 #"\"tnt\""
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"; update-player-material : Player -> Player"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"; Updates player with the new placeable material (PM)"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 22 #"update-player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 16 #"player-direction"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 12 #"player-score"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"update-player-material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 5 #"\"tnt\""
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 22 #"update-player-material"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #")) "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"; cycle-placeable-materials : PM -> PM"
0 0 17 29 1 #"\n"
0 0 17 3 83
(
 #"; Given a placeable material, this function will return the next pla"
 #"ceable material"
) 0 0 17 29 1 #"\n"
0 0 17 3 49 #"; Cycles through all possible placeable materials"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 2 #") "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #") "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #") "
0 0 17 3 5 #"\"tnt\""
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 25 #"cycle-placeable-materials"
0 0 17 3 1 #" "
0 0 17 3 5 #"\"tnt\""
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"; place-material : GS -> GS"
0 0 17 29 1 #"\n"
0 0 17 3 65
#"; Places a placeable material on top of the current top material,"
0 0 17 29 1 #"\n"
0 0 17 3 88
(
 #"; if a player is facing a valid location, confirms that the attempte"
 #"d placement is valid"
) 0 0 17 29 1 #"\n"
0 0 17 3 85
(
 #"; if valid, places the selected material on the grid at location the"
 #" player is facing"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"place-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 15 #"valid-location?"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 7 #"make-gs"
0 0 17 3 2 #" ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 19 #"place-material-grid"
0 0 17 3 2 #" ("
0 0 17 3 7 #"gs-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 3 #") ("
0 0 17 3 10 #"gs-players"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 4 #")) ("
0 0 17 3 7 #"gs-time"
0 0 17 3 1 #" "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 17 3 2 #"gs"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"place-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-1"
0 0 17 3 2 #") "
0 0 17 3 4 #"GS-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"place-material"
0 0 17 3 1 #" "
0 0 17 3 4 #"GS-2"
0 0 17 3 2 #") "
0 0 17 3 4 #"GS-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 14 #"place-material"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                      ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"                "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 7 #"make-gs"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"               "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"; place-material-grid : Grid Player -> Grid"
0 0 17 29 1 #"\n"
0 0 17 3 78
(
 #"; Updates the grid with the new block that is placed by the player o"
 #"n the grid"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 19 #"place-material-grid"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 13 #"posn-to-place"
0 0 17 3 2 #" ("
0 0 17 3 26 #"get-player-facing-location"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 4 #"pair"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 17 #"pair-equals-posn?"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #" "
0 0 17 3 13 #"posn-to-place"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                       ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"pair-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"pair"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                                  ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 2 #" ("
0 0 17 3 15 #"player-material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pl"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"                                                 ("
0 0 17 3 17 #"get-lom-from-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"gr"
0 0 17 3 1 #" "
0 0 17 3 13 #"posn-to-place"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"                       "
0 0 17 3 4 #"pair"
0 0 17 3 3 #")) "
0 0 17 3 2 #"gr"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"place-material-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #" "
0 0 17 3 8 #"PLAYER-1"
0 0 17 3 2 #") "
0 0 17 3 6 #"GRID-2"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 19 #"place-material-grid"
0 0 17 3 1 #" "
0 0 17 3 6 #"GRID-2"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-player"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 9 #"make-pair"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; add-pm-to-lom : PM LoM -> LoM"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"; Adds the given PM to the beginning of the given LoM"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"get-top-lom"
0 0 17 3 1 #" "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 3 2 #"pm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 2 #") "
0 0 17 3 3 #"lom"
0 0 17 3 2 #") "
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 17 3 3 #"lom"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 8 #"make-tnt"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"wood"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"rock"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 13 #"add-pm-to-lom"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"water"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"grass"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"; pm->material : PM -> Material"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"; Converts a PM to its Material constant"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"    [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #") "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 3 #"]))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-WATER"
0 0 17 3 2 #") "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 12 #"pm->material"
0 0 17 3 1 #" "
0 0 17 3 6 #"PM-TNT"
0 0 17 3 2 #") "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"; valid-placement? : PM Material -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"; Checks if the attempted placement is a valid one"
0 0 17 29 1 #"\n"
0 0 17 3 97
(
 #"; An invalid placement is trying to place anything other than rock o"
 #"n top of either rock or water"
) 0 0 17 29 1 #"\n"
0 0 17 3 95
(
 #"; Only rock can be placed on another rock or water. All other placem"
 #"ent combinations are valid."
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 7 #"symbol?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 3 #") ("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 3 #") ("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 2 #"pm"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #")]"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"        [("
0 0 17 3 8 #"symbol=?"
0 0 17 3 1 #" "
0 0 17 3 3 #"mat"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 2 #"])"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"      "
0 0 17 3 5 #"#true"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-GRASS"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#false"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 9 #"MAT-WATER"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-ROCK"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-ROCK"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-WOOD"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 8 #"MAT-GOLD"
0 0 17 3 1 #" "
0 0 17 3 8 #"PM-GRASS"
0 0 17 3 2 #") "
0 0 17 3 5 #"#true"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 16 #"valid-placement?"
0 0 17 3 1 #" "
0 0 17 3 7 #"MAT-TNT"
0 0 17 3 1 #" "
0 0 17 3 7 #"PM-WOOD"
0 0 17 3 2 #") "
0 0 17 3 6 #"#true)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0           0
